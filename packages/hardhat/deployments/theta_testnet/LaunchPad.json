{
  "address": "0x2fDf419C0bd097E8b1E834B1dE5e846D2971c8f6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_fundingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialAdmin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialProposer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialPauser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialTeamOps",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Contributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "daoProposalId",
          "type": "uint256"
        }
      ],
      "name": "DaoProposalIdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundingGoal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "teamWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profitSharePercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "category",
          "type": "string"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "ProjectFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectUnpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "TeamKYCChecked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ticketManagerAddress",
          "type": "address"
        }
      ],
      "name": "TicketManagerInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEAM_OPS_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_fundingGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_teamWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profitSharePercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_teaserURI",
          "type": "string"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newDescription",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_newFundingGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newEndTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newTeamWallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_newCategory",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newTeaserURI",
          "type": "string"
        }
      ],
      "name": "editProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ticketPrice",
          "type": "uint256"
        }
      ],
      "name": "finalizeProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getContributors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFailedProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFinalizedProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectByProjectId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getProjectsByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        }
      ],
      "name": "getProjectsByCategory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProjectsInProgress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSuccessfulProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getTicketCollectionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUpcomingProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ticketManagerAddress",
          "type": "address"
        }
      ],
      "name": "initializeTicketManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "pauseProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "projectInvestments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "fundingGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "teamWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalFunded",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "profitSharePercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "category",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ticketCollection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "daoProposalId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "teaserURI",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isFinalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "teamKycVerified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "refundInvestors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_daoProposalId",
          "type": "uint256"
        }
      ],
      "name": "setDaoProposalId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "setTeamKycVerified",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketManager",
      "outputs": [
        {
          "internalType": "contract ITicketManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "totalFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "unpauseProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "userContribution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc05e51ef3e854a386c0937516af3d41d57ef2fb4c2fc909d97e74a9286bcff1e",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0xc609039aB9266a558ac84AA0067aaf26B24264b9",
    "contractAddress": "0x2fDf419C0bd097E8b1E834B1dE5e846D2971c8f6",
    "transactionIndex": 1,
    "gasUsed": "4441533",
    "logsBloom": "0x
    "blockHash": "0xd3de3cb565ff1a28e839acdf7a000044136c98b41cc8a66662290e73a14162b7",
    "transactionHash": "0xc05e51ef3e854a386c0937516af3d41d57ef2fb4c2fc909d97e74a9286bcff1e",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 27339540,
        "transactionHash": "0xc05e51ef3e854a386c0937516af3d41d57ef2fb4c2fc909d97e74a9286bcff1e",
        "address": "0x2fDf419C0bd097E8b1E834B1dE5e846D2971c8f6",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd3de3cb565ff1a28e839acdf7a000044136c98b41cc8a66662290e73a14162b7"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 27339540,
        "transactionHash": "0xc05e51ef3e854a386c0937516af3d41d57ef2fb4c2fc909d97e74a9286bcff1e",
        "address": "0x2fDf419C0bd097E8b1E834B1dE5e846D2971c8f6",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
          "0x0000000000000000000000006a5f8c032d73f4caa6a51b8641b8ec1f1e984e9c",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xd3de3cb565ff1a28e839acdf7a000044136c98b41cc8a66662290e73a14162b7"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 27339540,
        "transactionHash": "0xc05e51ef3e854a386c0937516af3d41d57ef2fb4c2fc909d97e74a9286bcff1e",
        "address": "0x2fDf419C0bd097E8b1E834B1dE5e846D2971c8f6",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xd3de3cb565ff1a28e839acdf7a000044136c98b41cc8a66662290e73a14162b7"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 27339540,
        "transactionHash": "0xc05e51ef3e854a386c0937516af3d41d57ef2fb4c2fc909d97e74a9286bcff1e",
        "address": "0x2fDf419C0bd097E8b1E834B1dE5e846D2971c8f6",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xd3de3cb565ff1a28e839acdf7a000044136c98b41cc8a66662290e73a14162b7"
      }
    ],
    "blockNumber": 27339540,
    "cumulativeGasUsed": "4441533",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x680CB1c26DEa1075bf02469fCf2007520C656689",
    "0xc609039aB9266a558ac84AA0067aaf26B24264b9",
    "0x6A5f8c032D73f4cAa6A51b8641b8ec1f1E984e9C",
    "0xc609039aB9266a558ac84AA0067aaf26B24264b9",
    "0xc609039aB9266a558ac84AA0067aaf26B24264b9"
  ],
  "numDeployments": 1,
  "solcInputHash": "8cdd01dc4a151f4d633ec63fe4f9cf43",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_fundingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialProposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialPauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialTeamOps\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"}],\"name\":\"DaoProposalIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ProjectFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"TeamKYCChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ticketManagerAddress\",\"type\":\"address\"}],\"name\":\"TicketManagerInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_OPS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_teamWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_teaserURI\",\"type\":\"string\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_newFundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newEndTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newTeamWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_newCategory\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newTeaserURI\",\"type\":\"string\"}],\"name\":\"editProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPrice\",\"type\":\"uint256\"}],\"name\":\"finalizeProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getContributors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFailedProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFinalizedProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectByProjectId\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getProjectsByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"}],\"name\":\"getProjectsByCategory\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectsInProgress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuccessfulProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getTicketCollectionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUpcomingProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ticketManagerAddress\",\"type\":\"address\"}],\"name\":\"initializeTicketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"pauseProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"projectInvestments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"refundInvestors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_daoProposalId\",\"type\":\"uint256\"}],\"name\":\"setDaoProposalId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setTeamKycVerified\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketManager\",\"outputs\":[{\"internalType\":\"contract ITicketManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"totalFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"unpauseProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userContribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LaunchPad.sol\":\"LaunchPad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/ITicketManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ITicketManager {\\n    function createTicketCollection(\\n        uint256 _projectId,\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _price,\\n        string memory _category,\\n        string memory _title,\\n        address[] memory _investors,\\n        uint256[] memory _investment_amounts, \\n        uint256 _fundingGoal, \\n        uint256 _profitSharePercentage, \\n        address _creator\\n\\n    ) external returns (address);\\n\\n    // Add the getTicketsSold function to the interface\\n    function getTicketsSold(uint256 _projectId) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xff08e2ad190f217f3ff29e1815f3d72dd63a4ec117f44c892290c30c757578aa\",\"license\":\"MIT\"},\"contracts/LaunchPad.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"./ITicketManager.sol\\\";\\n\\ncontract LaunchPad is Pausable, AccessControl, ReentrancyGuard {\\n    bytes32 public constant PROPOSER_ROLE = keccak256(\\\"PROPOSER_ROLE\\\");\\n    bytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n    bytes32 public constant TEAM_OPS_ROLE = keccak256(\\\"TEAM_OPS_ROLE\\\"); // New role for KYC checks\\n\\n    struct Project {\\n        string name;\\n        string description;\\n        uint256 fundingGoal;\\n        uint256 startTime;\\n        uint256 endTime;\\n        address teamWallet;\\n        uint256 totalFunded;\\n        bool isActive; // Added isActive flag\\n        address[] contributors;\\n        address creator;\\n        uint256 profitSharePercentage;\\n        string category;\\n        address ticketCollection;\\n        uint256 projectId;\\n        uint256 daoProposalId;\\n        string teaserURI;\\n        bool isFinalized; // Added to track if the project has been finalized\\n        bool teamKycVerified; // New field for KYC status\\n    }\\n\\n    mapping(uint256 => Project) public projects;\\n    uint256 public projectCount;\\n    IERC20 public fundingToken;\\n    mapping(uint256 => mapping(address => uint256)) public projectInvestments;\\n\\n    ITicketManager public ticketManager;\\n\\n    event ProjectCreated(\\n        uint256 indexed projectId,\\n        string name,\\n        uint256 fundingGoal,\\n        uint256 startTime,\\n        uint256 endTime,\\n        address teamWallet,\\n        address creator,\\n        uint256 profitSharePercentage,\\n        string category\\n    );\\n\\n    event Contributed(uint256 indexed projectId, address indexed contributor, uint256 amount);\\n    event Withdrawn(uint256 indexed projectId, address indexed recipient, uint256 amount);\\n    event ProjectFinalized(uint256 indexed projectId, bool success);\\n    event TicketManagerInitialized(address ticketManagerAddress);\\n    event DaoProposalIdSet(uint256 indexed projectId, uint256 daoProposalId);\\n    event ProjectPaused(uint256 indexed projectId);\\n    event ProjectUnpaused(uint256 indexed projectId);\\n    event TeamKYCChecked(uint256 indexed projectId, bool status); // New event for KYC status change\\n\\n    constructor(IERC20 _fundingToken, address _initialAdmin, address _initialProposer, address _initialPauser, address _initialTeamOps) {\\n        fundingToken = _fundingToken;\\n        _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin);\\n        _grantRole(PROPOSER_ROLE, _initialProposer);\\n        _grantRole(PAUSER_ROLE, _initialPauser);\\n        _grantRole(TEAM_OPS_ROLE, _initialTeamOps); // Grant TEAM_OPS role to the initial address\\n    }\\n\\n    function initializeTicketManager(address _ticketManagerAddress) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n        require(address(ticketManager) == address(0), \\\"TicketManager already initialized\\\");\\n        ticketManager = ITicketManager(_ticketManagerAddress);\\n        emit TicketManagerInitialized(_ticketManagerAddress);\\n    }\\n\\n\\n    function createProject(\\n        string memory _name,\\n        string memory _description,\\n        uint256 _fundingGoal,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _teamWallet,\\n        address _creator,\\n        uint256 _profitSharePercentage,\\n        string memory _category,\\n        string memory _teaserURI\\n    ) public onlyRole(PROPOSER_ROLE) {\\n        require(_startTime >= block.timestamp, \\\"Start time must be in the future\\\");\\n        require(_endTime > _startTime, \\\"End time must be after start time\\\");\\n        require(_teamWallet != address(0), \\\"Team wallet cannot be zero address\\\");\\n        require(_profitSharePercentage <= 90, \\\"Profit share percentage cannot exceed 90%\\\");\\n        require(address(ticketManager) != address(0), \\\"TicketManager not initialized\\\");\\n\\n        uint256 projectId = projectCount;\\n        projects[projectId] = Project({\\n            name: _name,\\n            description: _description,\\n            fundingGoal: _fundingGoal,\\n            startTime: _startTime,\\n            endTime: _endTime,\\n            totalFunded: 0,\\n            isActive: true, // Initialize isActive as true\\n            teamWallet: _teamWallet,\\n            contributors: new address[](0),\\n            creator: _creator,\\n            profitSharePercentage: _profitSharePercentage,\\n            category: _category,\\n            ticketCollection: address(0),\\n            projectId: projectId,\\n            daoProposalId: 0,\\n            teaserURI: _teaserURI,\\n            isFinalized: false, // Initialize as not finalized\\n            teamKycVerified: false // Initialize KYC status as not checked\\n        });\\n\\n        projectCount++;\\n\\n        emit ProjectCreated(projectId, _name, _fundingGoal, _startTime, _endTime, _teamWallet, msg.sender, _profitSharePercentage, _category);\\n    }\\n\\n    function contribute(uint256 _projectId, uint256 _amount) public whenNotPaused {\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is not active\\\"); // Added isActive check\\n        require(block.timestamp >= project.startTime, \\\"Project has not started yet\\\");\\n        require(block.timestamp <= project.endTime, \\\"Project has ended\\\");\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n\\n        fundingToken.transferFrom(msg.sender, address(this), _amount);\\n        project.totalFunded += _amount;\\n        projectInvestments[_projectId][msg.sender] += _amount;\\n\\n        if (project.contributors.length == 0 || project.contributors[project.contributors.length - 1] != msg.sender) {\\n            project.contributors.push(msg.sender);\\n        }\\n\\n        emit Contributed(_projectId, msg.sender, _amount);\\n    }\\n\\n   function finalizeProject(uint256 _projectId, uint256 _ticketPrice) public {\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is not active\\\"); \\n        require(block.timestamp > project.endTime, \\\"Project has not ended yet\\\");\\n        require(msg.sender == project.creator, \\\"Only the project creator can finalize\\\");\\n        require(!project.isFinalized, \\\"Project is already finalized\\\");\\n\\n        \\n        bool success = project.totalFunded >= project.fundingGoal;\\n\\n        if (success) {\\n             (address[] memory investors, uint256[] memory investment_amounts) = _getContributorData(_projectId);\\n            project.ticketCollection = ticketManager.createTicketCollection(\\n                _projectId,\\n                string(abi.encodePacked(project.name, \\\" Tickets\\\")),\\n                string(abi.encodePacked(\\\"FLIXTKT#\\\", _projectId)),\\n                _ticketPrice,\\n                project.category,\\n                project.name,\\n                investors,\\n                investment_amounts, \\n                project.fundingGoal,\\n                project.profitSharePercentage,\\n                project.creator\\n            );\\n            fundingToken.transfer(project.teamWallet, project.totalFunded);\\n            project.isActive = false; \\n            project.isFinalized = true; \\n        }\\n        \\n\\n        emit ProjectFinalized(_projectId, success);\\n    }\\n    \\n    function _getContributorData(uint256 _projectId) private view returns (address[] memory, uint256[] memory) {\\n    Project storage project = projects[_projectId];\\n    uint256 count = project.contributors.length;\\n    address[] memory contributors = new address[](count);\\n    uint256[] memory amounts = new uint256[](count);\\n\\n    for (uint256 i = 0; i < count; i++) {\\n        contributors[i] = project.contributors[i];\\n        amounts[i] = projectInvestments[_projectId][project.contributors[i]];\\n    }\\n\\n    return (contributors, amounts);\\n}\\n\\n    function refundInvestors(uint256 _projectId) public {\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is not active\\\"); \\n        require(block.timestamp > project.endTime, \\\"Project has not ended yet\\\");\\n        require(msg.sender == project.creator, \\\"Only the project creator can finalize\\\");\\n        require(!project.isFinalized, \\\"Project is already finalized\\\");\\n        require(project.totalFunded < project.fundingGoal, \\\"The project has reached the funding Goal something is wrong\\\");\\n\\n        for (uint256 i = 0; i < project.contributors.length; i++) {\\n            address contributorAddress = project.contributors[i];\\n            if (projectInvestments[_projectId][contributorAddress] > 0) {\\n                uint256 refundAmount = projectInvestments[_projectId][contributorAddress];\\n                projectInvestments[_projectId][contributorAddress] = 0;\\n                fundingToken.transfer(contributorAddress, refundAmount);\\n                emit Withdrawn(_projectId, contributorAddress, refundAmount);\\n            }\\n        }\\n        project.isActive = false; \\n        project.isFinalized = true; \\n\\n    }\\n\\n    function withdrawFunds(uint256 _projectId) public {\\n        Project storage project = projects[_projectId];\\n        // Removed the requirement for project.isFinalized\\n        require(projectInvestments[_projectId][msg.sender] > 0, \\\"No funds to withdraw\\\");\\n        // Check if the project is active based on start and end dates\\n        require(block.timestamp < project.startTime || block.timestamp > project.endTime, \\\"Project is still active\\\");\\n\\n        uint256 amount = projectInvestments[_projectId][msg.sender];\\n        projectInvestments[_projectId][msg.sender] = 0; // Reset the contributor's investment\\n        fundingToken.transfer(msg.sender, amount); // Transfer the funds back to the contributor\\n\\n        emit Withdrawn(_projectId, msg.sender, amount);\\n    }\\n\\n    function pause() public onlyRole(PAUSER_ROLE) {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyRole(PAUSER_ROLE) {\\n        _unpause();\\n    }\\n\\n    function editProject(\\n        uint256 _projectId,\\n        string memory _newName,\\n        string memory _newDescription,\\n        uint256 _newFundingGoal,\\n        uint256 _newStartTime,\\n        uint256 _newEndTime,\\n        address _newTeamWallet,\\n        string memory _newCategory,\\n        string memory _newTeaserURI\\n    ) public {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        Project storage project = projects[_projectId];\\n        require(msg.sender == project.creator, \\\"Only the project creator can edit\\\");\\n\\n        project.name = _newName;\\n        project.description = _newDescription;\\n        project.fundingGoal = _newFundingGoal;\\n        project.startTime = _newStartTime;\\n        project.endTime = _newEndTime;\\n        project.teamWallet = _newTeamWallet;\\n        project.category = _newCategory;\\n        project.teaserURI = _newTeaserURI;\\n\\n        require(project.startTime >= block.timestamp, \\\"Start time must be in the future\\\");\\n        require(project.endTime > project.startTime, \\\"End time must be after start time\\\");\\n        require(project.teamWallet != address(0), \\\"Team wallet cannot be zero address\\\");\\n    }\\n\\n    function setDaoProposalId(uint256 _projectId, uint256 _daoProposalId) public onlyRole(PROPOSER_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        projects[_projectId].daoProposalId = _daoProposalId;\\n        emit DaoProposalIdSet(_projectId, _daoProposalId);\\n    }\\n\\n    function getProjectsByAddress(address _address) public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].creator == _address) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory projectsByAddress = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].creator == _address) {\\n                projectsByAddress[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return projectsByAddress;\\n    }\\n\\n    function getProjectsByCategory(string memory _category) public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (keccak256(bytes(projects[i].category)) == keccak256(bytes(_category))) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory projectsByCategory = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (keccak256(bytes(projects[i].category)) == keccak256(bytes(_category))) {\\n                projectsByCategory[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return projectsByCategory;\\n    }\\n\\n    function getProjectsInProgress() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp >= projects[i].startTime && block.timestamp <= projects[i].endTime && projects[i].isActive) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory inProgressProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp >= projects[i].startTime && block.timestamp <= projects[i].endTime && projects[i].isActive) {\\n                inProgressProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return inProgressProjects;\\n    }\\n\\n    function getSuccessfulProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            // Check if the project has ended and was successful\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded >= projects[i].fundingGoal) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory successfulProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            // Check if the project has ended and was successful\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded >= projects[i].fundingGoal) {\\n                successfulProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return successfulProjects;\\n    }\\n\\n    function getUpcomingProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp < projects[i].startTime && projects[i].isActive) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory upcomingProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp < projects[i].startTime && projects[i].isActive) {\\n                upcomingProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return upcomingProjects;\\n    }\\n\\n    function getFailedProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded < projects[i].fundingGoal) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory failedProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded < projects[i].fundingGoal) {\\n                failedProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return failedProjects;\\n    }\\n\\n    function getFinalizedProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].isFinalized) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory finalizedProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].isFinalized) {\\n                finalizedProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return finalizedProjects;\\n    }\\n    function getProjectByProjectId(uint256 _projectId) public view returns (Project memory) {\\n    require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n    return projects[_projectId];\\n    }\\n\\n    function totalFunded(uint256 _projectId) public view returns (uint256) {\\n        return projects[_projectId].totalFunded;\\n    }\\n\\n    function getTicketCollectionAddress(uint256 _projectId) public view returns (address) {\\n        return projects[_projectId].ticketCollection;\\n    }\\n\\n    function getContributors(uint256 _projectId) public view returns (address[] memory) {\\n        return projects[_projectId].contributors;\\n    }\\n\\n    function userContribution(uint256 _projectId, address _user) public view returns (bool, uint256) {\\n        uint256 amount = projectInvestments[_projectId][_user];\\n        return (amount > 0, amount);\\n    }\\n\\n    function setTeamKycVerified(uint256 _projectId, bool _status) public onlyRole(TEAM_OPS_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        projects[_projectId].teamKycVerified = _status;\\n        emit TeamKYCChecked(_projectId, _status);\\n    }\\n\\n  function pauseProject(uint256 _projectId) public onlyRole(PAUSER_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is already paused\\\");\\n\\n        project.isActive = false;\\n        emit ProjectPaused(_projectId);\\n    }\\n\\n    function unpauseProject(uint256 _projectId) public onlyRole(PAUSER_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        Project storage project = projects[_projectId];\\n        require(!project.isActive, \\\"Project is already active\\\");\\n\\n        project.isActive = true;\\n        emit ProjectUnpaused(_projectId);\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"ETH transfers not accepted\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x8d25e60ca8badee1569794a13dd11100f48758a0955d1b9d45714738564099c8\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.22 <0.9.0;\\n\\nlibrary console {\\n    address constant CONSOLE_ADDRESS =\\n        0x000000000000000000636F6e736F6c652e6c6f67;\\n\\n    function _sendLogPayloadImplementation(bytes memory payload) internal view {\\n        address consoleAddress = CONSOLE_ADDRESS;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            pop(\\n                staticcall(\\n                    gas(),\\n                    consoleAddress,\\n                    add(payload, 32),\\n                    mload(payload),\\n                    0,\\n                    0\\n                )\\n            )\\n        }\\n    }\\n\\n    function _castToPure(\\n      function(bytes memory) internal view fnIn\\n    ) internal pure returns (function(bytes memory) pure fnOut) {\\n        assembly {\\n            fnOut := fnIn\\n        }\\n    }\\n\\n    function _sendLogPayload(bytes memory payload) internal pure {\\n        _castToPure(_sendLogPayloadImplementation)(payload);\\n    }\\n\\n    function log() internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n    }\\n    function logInt(int256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n    }\\n\\n    function logUint(uint256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n    }\\n\\n    function logString(string memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n    }\\n\\n    function logBool(bool p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n    }\\n\\n    function logAddress(address p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n    }\\n\\n    function logBytes(bytes memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n    }\\n\\n    function logBytes1(bytes1 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n    }\\n\\n    function logBytes2(bytes2 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n    }\\n\\n    function logBytes3(bytes3 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n    }\\n\\n    function logBytes4(bytes4 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n    }\\n\\n    function logBytes5(bytes5 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n    }\\n\\n    function logBytes6(bytes6 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n    }\\n\\n    function logBytes7(bytes7 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n    }\\n\\n    function logBytes8(bytes8 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n    }\\n\\n    function logBytes9(bytes9 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n    }\\n\\n    function logBytes10(bytes10 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n    }\\n\\n    function logBytes11(bytes11 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n    }\\n\\n    function logBytes12(bytes12 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n    }\\n\\n    function logBytes13(bytes13 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n    }\\n\\n    function logBytes14(bytes14 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n    }\\n\\n    function logBytes15(bytes15 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n    }\\n\\n    function logBytes16(bytes16 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n    }\\n\\n    function logBytes17(bytes17 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n    }\\n\\n    function logBytes18(bytes18 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n    }\\n\\n    function logBytes19(bytes19 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n    }\\n\\n    function logBytes20(bytes20 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n    }\\n\\n    function logBytes21(bytes21 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n    }\\n\\n    function logBytes22(bytes22 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n    }\\n\\n    function logBytes23(bytes23 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n    }\\n\\n    function logBytes24(bytes24 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n    }\\n\\n    function logBytes25(bytes25 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n    }\\n\\n    function logBytes26(bytes26 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n    }\\n\\n    function logBytes27(bytes27 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n    }\\n\\n    function logBytes28(bytes28 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n    }\\n\\n    function logBytes29(bytes29 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n    }\\n\\n    function logBytes30(bytes30 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n    }\\n\\n    function logBytes31(bytes31 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n    }\\n\\n    function logBytes32(bytes32 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n    }\\n\\n    function log(uint256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n    }\\n\\n    function log(string memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n    }\\n\\n    function log(bool p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n    }\\n\\n    function log(address p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n    }\\n\\n    function log(uint256 p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608034620000f057601f6200410338819003918201601f19168301916001600160401b03831184841017620000f55780849260a094604052833981010312620000f05780516001600160a01b03811690819003620000f057620000d882620000d1620000726020620000df96016200010b565b620000ca62000084604085016200010b565b91620000a1608062000099606088016200010b565b96016200010b565b6000805460ff191690556001600255600580546001600160a01b03191690981790975562000120565b50620001a1565b5062000244565b50620002e2565b50604051613d629081620003818239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000f057565b6001600160a01b031660008181527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205490919060ff166200019d5781805260016020526040822081835260205260408220600160ff198254161790553391600080516020620040e38339815191528180a4600190565b5090565b6001600160a01b031660008181527fab0abe0ac784c8cb7ff2dde6fca8a20d1ab21f792e5ef34b43f146db4890393c60205260408120549091907fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc19060ff166200023f5780835260016020526040832082845260205260408320600160ff19825416179055600080516020620040e3833981519152339380a4600190565b505090565b6001600160a01b031660008181527fb9cbbae02fe941283ec0eefd7b121e3bc7f89fae077b27bdd75a7fd4cf1543a860205260408120549091907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff166200023f5780835260016020526040832082845260205260408320600160ff19825416179055600080516020620040e3833981519152339380a4600190565b6001600160a01b031660008181527fa664834666e14c77a711dc0a124ad5de41c6cfa9ea0370153406653f1ce1111d60205260408120549091907f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc99060ff166200023f5780835260016020526040832082845260205260408320600160ff19825416179055600080516020620040e3833981519152339380a460019056fe60a0806040526004361015610060575b50361561001b57600080fd5b60405162461bcd60e51b815260206004820152601a60248201527f455448207472616e7366657273206e6f742061636365707465640000000000006044820152606490fd5b60003560e01c90816301ffc9a714613257575080630c87dd3b146132205780630f717a6314613169578063107046bd14612fe95780631124acf414612ee0578063155dd5ee14612d44578063248a9ca314612d1557806329dd059b14612bf05780632a661dac14612a795780632e4efe95146128715780632f2ff15d14612832578063346ab5f21461273257806336568abe146126eb57806336fbad26146126cd5780633c1ab00f1461268a5780633f4ba83a146126205780635a18cd93146125f15780635c975abb146125ce5780635ebc4106146124bc57806378065f271461249357806378e9f080146122c05780637f11dfdf1461225c5780638456cb591461220257806387f3d223146120b35780638898303314611eb65780638c59091714611c2f5780638f61f4f514611bf457806391d1485414611ba75780639ee987b214611992578063a217fddf14611976578063c14e56561461192e578063d547741f146118ef578063d5842c8b14611705578063d5b8c0cd146116ca578063d9394d8314611611578063dcd1a3cc14610cfe578063e63ab1e914610cc3578063e6e5656c14610798578063e9b7fed41461074a578063f96b61cf146107215763fdd3df8614610230573861000f565b3461060e5761023e3661364d565b816000526003602052604060002061025c60ff60078301541661396d565b61026b60048201544211613a22565b60098101546001600160a01b031691610285338414613a6e565b61029660ff60108401541615613ac8565b600682015491600281015493848410156102dc575b857ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab4506602086886040519110158152a2005b85600095929493955260036020526008604060002001908154906102ff82613930565b9161030d6040519384613300565b808352601f19938461031e83613930565b0136602086013761032e82613930565b9461033c6040519687613300565b82865261034883613930565b0136602087013760005b8281106106ae5750505060018060a01b03600754169160405197886000895461037a816132aa565b906001811690811561068a5750600114610647575b506103b4918167205469636b65747360c01b600893520360171981018c52018a613300565b6040519867464c4958544b542360c01b60208b01528a60288b015260288a528960608101106001600160401b0360608c011117610631578a91959493926104726104618c61043161048395600a8f6060850160405201549763941a0a8b60e01b6060850152606484015261016060848401526101c48301906133c7565b9960c461044b6063199c8d8582030160a4860152846133c7565b9201528d81038a0160e48f0152600b8d01613b14565b8c810389016101048e01528b613b14565b90878c8303016101248d0152613407565b94898603016101448a01526020808551968781520194019460005b81811061061b57505061016489018690526101848901526101a4880152602092506060870191879003605f19019082906000905af180156105be576000906105ca575b600c840180546001600160a01b0319166001600160a01b039283161790556005805490850154600686015460405163a9059cbb60e01b815291841660048301526024820152955060209186911681600081604481015b03925af19283156105be577ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab450694602094610591575b506010600160ff198060078501541660078501558284015416179101559281926102ab565b6105b090853d87116105b7575b6105a88183613300565b8101906139b1565b503861056c565b503d61059e565b6040513d6000823e3d90fd5b50926020813d602011610613575b816105e860209360608401613300565b8101031261060e5760600151926001600160a01b038416840361060e57610537936104e1565b600080fd5b3d91506105d8565b865186526020968701969095019460010161049e565b634e487b7160e01b600052604160045260246000fd5b915050886000528960206000206000905b83821061067157509091820160200190506103b461038f565b8082936020809460019454920101520191018b91610658565b60ff1916602085810191909152821515909202840190910191506103b4905061038f565b806106bc61071c92846139d6565b905460039190911b1c6001600160a01b03166106d88288613baa565b528b600052600660205260406000206106f182856139d6565b60018060a01b0391549060031b1c166000526020526040600020546107168289613baa565b5261395e565b610352565b3461060e57600036600319011261060e576007546040516001600160a01b039091168152602090f35b3461060e57604036600319011261060e5761076361360b565b600435600052600660205260406000209060018060a01b03166000526020526040806000205481519080151582526020820152f35b3461060e5761012036600319011261060e576001600160401b0360043560243582811161060e576107cd9036906004016135b5565b60443583811161060e576107e59036906004016135b5565b906107ee613637565b9160e43585811161060e576108079036906004016135b5565b946101043581811161060e576108219036906004016135b5565b9461082f6004548210613bbe565b6000526020916003835260406000209360018060a01b0396876009870154163303610c74578151848111610631578061086888546132aa565b93601f94858111610c46575b508790858311600114610be157600092610bd6575b50508160011b916000199060031b1c19161786555b8251928484116106315760019380858901926108ba84546132aa565b868111610ba8575b508890868311600114610b4557600092610b3a575b5050600019600383901b1c191690851b1790555b606435600287015560038601956084358755600481019960a4358b55896005830199166001600160601b0360a01b8a5416178955600b8201908051908782116106315761093883546132aa565b868111610b0c575b508890868311600114610aa457600f9493929160009183610a99575b5050600019600383901b1c191690871b1790555b019481519485116106315761098586546132aa565b838111610a61575b50809285116001146109ee575092806109e199959381936109d898966000946109e3575b50501b916000199060031b1c19161790555b54906109d142831015613838565b5411613883565b541615156138d9565b005b015192508b806109b1565b9190601f9493941984168660005283600020936000905b828210610a4a575050916109d897959391856109e19c98969410610a31575b505050811b0190556109c3565b015160001960f88460031b161c19169055898080610a24565b808886978294978701518155019601940190610a05565b610a8a9087600052826000208580890160051c820192858a10610a90575b0160051c0190613947565b8a61098d565b92508192610a7f565b015190508e8061095c565b9392918791601f19821690846000528b6000209160005b8d828210610af65750509683600f9810610add575b505050811b019055610970565b015160001960f88460031b161c191690558e8080610ad0565b838a015185558c96909401939283019201610abb565b610b3490846000528a6000208880860160051c8201928d8710610a90570160051c0190613947565b8d610940565b015190508c806108d7565b908793508460005289600020916000601f198516905b8c828210610b925750508411610b79575b505050811b0190556108eb565b015160001960f88460031b161c191690558c8080610b6c565b8385015186558b97909501949384019301610b5b565b610bd090856000528a6000208880860160051c8201928d8710610a90570160051c0190613947565b8d6108c2565b015190508b80610889565b60008a81528981209350601f198516905b8a828210610c30575050908460019594939210610c17575b505050811b01865561089e565b015160001960f88460031b161c191690558b8080610c0a565b6001859682939686015181550195019301610bf2565b610c6e908a600052896000208780860160051c8201928c8710610a90570160051c0190613947565b8c610874565b60405162461bcd60e51b815260048101869052602160248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e206564696044820152601d60fa1b6064820152608490fd5b3461060e57600036600319011261060e5760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b3461060e5761014036600319011261060e576004356001600160401b03811161060e57610d2f9036906004016135b5565b6024356001600160401b03811161060e57610d4e9036906004016135b5565b9060a4356001600160a01b038116810361060e57610d6a613637565b92610104356001600160401b03811161060e57610d8b9036906004016135b5565b90610124356001600160401b03811161060e57610dac9036906004016135b5565b610db46136bf565b610dc2426064351015613838565b610dd160643560843511613883565b610de56001600160a01b03851615156138d9565b605a60e435116115ba576007546001600160a01b03161561157557600454956040518060208101106001600160401b0360208301111761063157602081016040526000815260405193610e37856132e4565b878552602085015260443560408501526064356060850152608435608085015260018060a01b03861660a0850152600060c0850152600160e085015261010084015260018060a01b031661012083015260e435610140830152826101608301526000610180830152856101a083015260006101c08301526101e082015260006102008201526000610220820152846000526003602052604060002081518051906001600160401b038211610631578190610ef184546132aa565b601f8111611543575b50602090601f83116001146114d7576000926114cc575b50508160011b916000199060031b1c19161781555b60208201518051906001600160401b038211610631578190610f4b60018501546132aa565b601f8111611497575b50602090601f83116001146114255760009261141a575b50508160011b916000199060031b1c19161760018201555b6040820151600282015560608201516003820155608082015160048201556005810160018060a01b0360a0840151166001600160601b0360a01b82541617905560c08201516006820155610fec60e08301511515600783019060ff801983541691151516179055565b6101008201518051906001600160401b03821161063157600160401b82116106315760209060088401548360088601558084106113fa575b500160088301600052602060002060005b8381106113dd57505050506009810160018060a01b03610120840151166001600160601b0360a01b825416179055610140820151600a8201556101608201518051906001600160401b038211610631578190611094600b8501546132aa565b601f81116113a8575b50602090601f83116001146113365760009261132b575b50508160011b916000199060031b1c191617600b8201555b600c810160018060a01b03610180840151166001600160601b0360a01b8254161790556101a0820151600d8201556101c0820151600e8201556101e08201518051906001600160401b03821161063157611129600f8401546132aa565b601f81116112eb575b50602090601f8311600114611247579361022060106111f49895857f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9b99966111d0966112379a60009261123c575b50508160011b916000199060031b1c191617600f8201555b01916111b86102008201511515849060ff801983541691151516179055565b0151815461ff00191690151560081b61ff0016179055565b6111db60045461395e565b60045560405194859461010086526101008601906133c7565b6044356020860152606435604086015260843560608601526001600160a01b0390921660808501523360a085015260e43560c085015283820360e08501526133c7565b0390a2005b015190508e80611181565b90600f840160005260206000209160005b601f19851681106112d3575060106111f498956001866111d0966112379a96610220967f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9f9d9a601f198116106112ba575b505050811b01600f820155611199565b015160001960f88460031b161c191690558e80806112aa565b91926020600181928685015181550194019201611258565b61131b90600f85016000526020600020601f850160051c81019160208610611321575b601f0160051c0190613947565b88611132565b909150819061130e565b0151905088806110b4565b9250600b84016000526020600020906000935b601f198416851061138d576001945083601f19811610611374575b505050811b01600b8201556110cc565b015160001960f88460031b161c19169055888080611364565b81810151835560209485019460019093019290910190611349565b6113d790600b86016000526020600020601f850160051c8101916020861061132157601f0160051c0190613947565b8961109d565b82516001600160a01b031681830155602090920191600101611035565b611414906008860160005284846000209182019101613947565b89611024565b015190508880610f6b565b9250600184016000526020600020906000935b601f198416851061147c576001945083601f19811610611463575b505050811b016001820155610f83565b015160001960f88460031b161c19169055888080611453565b81810151835560209485019460019093019290910190611438565b6114c690600186016000526020600020601f850160051c8101916020861061132157601f0160051c0190613947565b89610f54565b015190508880610f11565b9250836000526020600020906000935b601f1984168510611528576001945083601f1981161061150f575b505050811b018155610f26565b015160001960f88460031b161c19169055888080611502565b818101518355602094850194600190930192909101906114e7565b61156f90856000526020600020601f850160051c8101916020861061132157601f0160051c0190613947565b89610efa565b60405162461bcd60e51b815260206004820152601d60248201527f5469636b65744d616e61676572206e6f7420696e697469616c697a65640000006044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f50726f6669742073686172652070657263656e746167652063616e6e6f74206560448201526878636565642039302560b81b6064820152608490fd5b3461060e57602036600319011261060e5760043561162d613663565b61163a6004548210613bbe565b8060005260036020526007604060002001805460ff81166116855760ff191660011790557ff87e623aca5b8bef3f4a5f8a900ecd4c0367b153c2d476a78b65a68661ba7a25600080a2005b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920616374697665000000000000006044820152606490fd5b3461060e57600036600319011261060e5760206040517f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc98152f35b3461060e5760208060031936011261060e5761171f613621565b600454906001600160a01b03908116906000805b8481106118b2575061174490613c84565b9360009160005b85811061176457604051806117608982613553565b0390f35b806000526003808452604060002083600982015416878114611792575b50505061178d9061395e565b61174b565b9161178d9396916118a993604051926117aa846132e4565b6117b383613321565b84526117c160018401613321565b89850152600283015460408501528201546060840152600482015460808401528660058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611818848301613cd4565b610100870152610120860152600a81015461014086015261183b600b8201613321565b61016086015288600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611870600f8201613321565b6101e086015201549082821615156102008501521c161515610220820152611898828b613baa565b526118a3818a613baa565b5061395e565b93908880611781565b8060005260038652838360096040600020015416146118da575b6118d59061395e565b611733565b906118e76118d59161395e565b9190506118cc565b3461060e57604036600319011261060e576109e160043561190e61360b565b9080600052600160205261192960016040600020015461371b565b6137c1565b3461060e57604036600319011261060e5761194761360b565b600435600052600660205260406000209060018060a01b03166000526020526020604060002054604051908152f35b3461060e57600036600319011261060e57602060405160008152f35b3461060e5760208060031936011261060e57600435806000526003808352604060002091600783016119c760ff82541661396d565b6119d660048501544211613a22565b60098401546001600160a01b0393906119f29085163314613a6e565b6010850191611a0560ff84541615613ac8565b6006928387015460028801541115611b3c5790956008019060005b8254811015611b275786611a3482856139d6565b905490861b1c169086600052858a526040600020826000528a52604060002054611a68575b611a63915061395e565b611a20565b6000878152868b5260408082208483528c5280822054898352888d528183208584528d52818320839055600554915163a9059cbb60e01b81526001600160a01b038616600482015260248101829052949290918d91869160449183918f165af19384156105be578c8a927fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237292611a6397611b0a575b50604051908152a3611a59565b611b2090833d85116105b7576105a88183613300565b508f611afd565b50865460ff1990811688558154166001179055005b60405162461bcd60e51b815260048101899052603b60248201527f5468652070726f6a656374206861732072656163686564207468652066756e6460448201527f696e6720476f616c20736f6d657468696e672069732077726f6e6700000000006064820152608490fd5b3461060e57604036600319011261060e57611bc061360b565b600435600052600160205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461060e57600036600319011261060e5760206040517fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc18152f35b3461060e57611c3d3661364d565b90611c46613a04565b80600052602060038152604060002090611c6660ff60078401541661396d565b60038201544210611e725760048201544211611e3a578315611df657600060018060a01b03928284600554166064604051809581936323b872dd60e01b83523360048401523060248401528b60448401525af19182156105be57600892611dd9575b5060068101611cd88782546139c9565b9055846000526006835260406000203360005283526040600020611cfd8782546139c9565b9055019182549283158015611d99575b611d42575b50507fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b3991506040519384523393a3005b600160401b8410156106315783611d7f9160017fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b39960181556139d6565b819291549060031b9133831b921b19161790558480611d12565b506000198401848111611dc357611db18391836139d6565b905460039190911b1c16331415611d0d565b634e487b7160e01b600052601160045260246000fd5b611def90843d86116105b7576105a88183613300565b5086611cc8565b6064906040519062461bcd60e51b82526004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b6064906040519062461bcd60e51b825260048201526011602482015270141c9bda9958dd081a185cc8195b991959607a1b6044820152fd5b6064906040519062461bcd60e51b82526004820152601b60248201527f50726f6a65637420686173206e6f7420737461727465642079657400000000006044820152fd5b3461060e57600036600319011261060e576004546000805b82811061205f5750611edf90613c84565b906000805b828110611ef957604051806117608682613553565b80600052600360209080825260406000209081015480421080612051575b611f2d575b505050611f289061395e565b611ee4565b91611f289394916120489360405192611f45846132e4565b611f4e83613321565b8452611f5c60018401613321565b908401526002820154604084015260608301526004810154608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611fb7848301613cd4565b61010087015280600983015416610120870152600a820154610140870152611fe1600b8301613321565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c0860152612015600f8201613321565b6101e086015201549082821615156102008501521c16151561022082015261203d8288613baa565b526118a38187613baa565b91908580611f1c565b5060ff600783015416611f17565b80600052600380602052604060002090810154421090816120a4575b5061208f575b61208a9061395e565b611ece565b9061209c61208a9161395e565b919050612081565b60ff915060070154168461207b565b3461060e57602036600319011261060e576004356120cf613bff565b506120dd6004548210613bbe565b6000526003602052611760604060002060ff6010604051926120fe846132e4565b61210781613321565b845261211560018201613321565b602085015260028101546040850152600381015460608501526004810154608085015260058101546001600160a01b0390811660a0860152600682015460c086015260078201548416151560e086015261217160088301613cd4565b61010086015280600983015416610120860152600a82015461014086015261219b600b8301613321565b610160860152600c82015416610180850152600d8101546101a0850152600e8101546101c08501526121cf600f8201613321565b6101e08501520154818116151561020084015260081c161515610220820152604051918291602083526020830190613444565b3461060e57600036600319011261060e5761221b613663565b612223613a04565b600160ff1960005416176000557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461060e5760207f0d2b0de855a382608a438ffcbbe1803df7a3ed01f7f5624d816e5b378d190a5861228d3661364d565b6122989391936136bf565b6122a56004548510613bbe565b836000526003825280600e60406000200155604051908152a2005b3461060e57600036600319011261060e576004546000805b82811061245657506122e990613c84565b906000805b82811061230357604051806117608682613553565b806000526003602090808252604060002060108101549060ff92838316908161233b575b5050505050506123369061395e565b6122ee565b9161244a9593916123369798959360405195612356876132e4565b61235f84613321565b875261236d60018501613321565b908701526002830154604087015282015460608601526004820154608086015260058201546001600160a01b0390811660a0870152600683015460c087015260078301548516151560e087015260089261242891600f91906123d0868301613cd4565b6101008a0152806009830154166101208a0152600a8201546101408a01526123fa600b8301613321565b6101608a0152600c82015416610180890152600d8101546101a0890152600e8101546101c089015201613321565b6101e086015215156102008501521c16151561022082015261203d8288613baa565b91908580808080612327565b80600052600360205260ff6010604060002001541661247e575b6124799061395e565b6122d8565b9061248b6124799161395e565b919050612470565b3461060e57600036600319011261060e576005546040516001600160a01b039091168152602090f35b3461060e57602036600319011261060e576124d5613621565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff16156125af576007546001600160a01b039190828116612560576001600160a01b03191691169081176007556040519081527f347aa47069ceafe11306c3ddc5ac3c7428ffdc41b25817490247db1f5e636ce690602090a1005b60405162461bcd60e51b815260206004820152602160248201527f5469636b65744d616e6167657220616c726561647920696e697469616c697a656044820152601960fa1b6064820152608490fd5b60405163e2517d3f60e01b815233600482015260006024820152604490fd5b3461060e57600036600319011261060e57602060ff600054166040519015158152f35b3461060e57602036600319011261060e5760043560005260036020526020600660406000200154604051908152f35b3461060e57600036600319011261060e57612639613663565b60005460ff8116156126785760ff19166000557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b3461060e57602036600319011261060e5760043560005260036020526117606126b96008604060002001613cd4565b604051918291602083526020830190613407565b3461060e57600036600319011261060e576020600454604051908152f35b3461060e57604036600319011261060e5761270461360b565b336001600160a01b03821603612720576109e1906004356137c1565b60405163334bd91960e11b8152600490fd5b3461060e57604036600319011261060e576004356024358015159081810361060e573360009081527fa664834666e14c77a711dc0a124ad5de41c6cfa9ea0370153406653f1ce1111d60205260409020547f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc99060ff161561281457507fc99334413c7a541e7e874b3e4d302828e85dd94168e081e7b4c89cbf5decb4749161280b6020926127e36004548710613bbe565b856000526003845260106040600020019061ff00825491151560081b169061ff001916179055565b604051908152a2005b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3461060e57604036600319011261060e576109e160043561285161360b565b9080600052600160205261286c60016040600020015461371b565b613741565b3461060e5760208060031936011261060e576004356001600160401b03811161060e576128a29036906004016135b5565b60045490918083016000805b848110612a2457506128bf90613c84565b9360009160005b8581106128db57604051806117608982613553565b806000526003808652600b6128ff6129068260406000200160405192838092613b14565b0382613300565b8781519101208551852014612926575b50506129219061395e565b6128c6565b94612a1c918396612921946000528189526040600020906040519261294a846132e4565b61295383613321565b845261296160018401613321565b8b85015260028301546040850152820154606084015260048201546080840152601060018060a01b03928360058201541660a0860152600681015460c086015260ff9384600783015416151560e08701526129e86008946129c3868501613cd4565b61010089015282600985015416610120890152600a8401546101408901528301613321565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611870600f8201613321565b939088612916565b80600052600384526128ff612a46600b60406000200160405192838092613b14565b8481519101208651842014612a64575b612a5f9061395e565b6128ae565b90612a71612a5f9161395e565b919050612a56565b3461060e57600036600319011261060e576004546000805b828110612b985750612aa290613c84565b906000805b828110612abc57604051806117608682613553565b80600052600360209080825260406000209060048201549081421180612b87575b612af4575b50505050612aef9061395e565b612aa7565b91612b7d9391612aef95969360405193612b0d856132e4565b612b1684613321565b8552612b2460018501613321565b90850152600283015460408501528201546060840152608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611fb7848301613cd4565b9190858080612ae2565b506006830154600284015411612add565b8060005260036020526040600020600481015442119081612bdd575b50612bc8575b612bc39061395e565b612a91565b90612bd5612bc39161395e565b919050612bba565b9050600260068201549101541184612bb4565b3461060e57600036600319011261060e576004546000805b828110612cab5750612c1990613c84565b906000805b828110612c3357604051806117608682613553565b8060005260036020908082526040600020908101548042101580612c9d575b80612c8f575b612c6e575b505050612c699061395e565b612c1e565b91612c69939491612c869360405192611f45846132e4565b91908580612c5d565b5060ff600783015416612c58565b506004820154421115612c52565b806000526003806020526040600020908101544210159081612d06575b81612cf7575b50612ce2575b612cdd9061395e565b612c08565b90612cef612cdd9161395e565b919050612cd4565b60ff9150600701541684612cce565b60048101544211159150612cc8565b3461060e57602036600319011261060e5760043560005260016020526020600160406000200154604051908152f35b3461060e5760208060031936011261060e576004358060005260038252604060002060068352604060002033600052835260406000205415612ea45760038101544210908115612e96575b5015612e515760008181526006808452604080832033808552908652818420548585529286528184208185528652818420849055600554915163a9059cbb60e01b815260048101919091526024810183905291949192829184916044918391906001600160a01b03165af19182156105be577fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237292612e34575b506040519384523393a3005b612e4a90823d84116105b7576105a88183613300565b5084612e28565b60405162461bcd60e51b815260048101839052601760248201527f50726f6a656374206973207374696c6c206163746976650000000000000000006044820152606490fd5b600491500154421183612d8f565b60405162461bcd60e51b81526004810184905260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b3461060e57600036600319011261060e576004546000805b828110612f905750612f0990613c84565b906000805b828110612f2357604051806117608682613553565b80600052600360209080825260406000209060048201549081421180612f7e575b612f5b575b50505050612f569061395e565b612f0e565b91612f749391612f5695969360405193612b0d856132e4565b9190858080612f49565b50600683015460028401541115612f44565b8060005260036020526040600020600481015442119081612fd5575b50612fc0575b612fbb9061395e565b612ef8565b90612fcd612fbb9161395e565b919050612fb2565b905060026006820154910154111584612fac565b3461060e57602036600319011261060e576004356000526003602052604060002061301381613321565b9061302060018201613321565b81600281015491600382015492600483015490600160a01b6001900391826005860154166006860154600787015460ff16908560098901541692600a89015494600b8a0161306d90613321565b97600c8b0154169a600d8b015499600e8c01549b600f0161308d90613321565b9d601001549e60405180608052610220809152608051016130ad916133c7565b60805180820390602001526130c1916133c7565b9760805160400152608051606001526080516080015260805160a0015260805160c00152151560805160e0015260805161010001526080516101200152608051808203906101400152613113916133c7565b92608051610160015260805161018001526080516101a00152608051808203906101c00152613141916133c7565b9060ff811615156080516101e0015260081c60ff161515608051610200015260805180910390f35b3461060e57602036600319011261060e57600435613185613663565b6131926004548210613bbe565b8060005260036020526007604060002001805460ff8116156131db5760ff191690557f9f505f325627bdd7f5a6dd8bcceecdc48a989f647561427d61d35b7a50703f79600080a2005b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920706175736564000000000000006044820152606490fd5b3461060e57602036600319011261060e576004356000526003602052602060018060a01b03600c6040600020015416604051908152f35b3461060e57602036600319011261060e576004359063ffffffff60e01b821680920361060e57602091637965db0b60e01b8114908115613299575b5015158152f35b6301ffc9a760e01b14905083613292565b90600182811c921680156132da575b60208310146132c457565b634e487b7160e01b600052602260045260246000fd5b91607f16916132b9565b61024081019081106001600160401b0382111761063157604052565b90601f801991011681019081106001600160401b0382111761063157604052565b9060405191826000825492613335846132aa565b9081845260019485811690816000146133a45750600114613361575b505061335f92500383613300565b565b9093915060005260209081600020936000915b81831061338c57505061335f93508201013880613351565b85548884018501529485019487945091830191613374565b91505061335f94506020925060ff191682840152151560051b8201013880613351565b919082519283825260005b8481106133f3575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016133d2565b90815180825260208080930193019160005b828110613427575050505090565b83516001600160a01b031685529381019392810192600101613419565b9061353661347061345e84516102408086528501906133c7565b602085015184820360208601526133c7565b6040840151604084015260608401516060840152608084015160808401526134fe6134d260018060a01b03928360a08801511660a087015260c087015160c087015260e0870151151560e0870152610100808801519087830390880152613407565b6101208381880151169086015261014080870151908601526101608087015190868303908701526133c7565b90610180908186015116908401526101a080850151908401526101c080850151908401526101e08085015190848303908501526133c7565b916102008082015115159083015261022080910151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106135875750505050505090565b90919293949584806135a5600193603f198682030187528a51613444565b9801930193019194939290613577565b81601f8201121561060e578035906001600160401b03821161063157604051926135e9601f8401601f191660200185613300565b8284526020838301011161060e57816000926020809301838601378301015290565b602435906001600160a01b038216820361060e57565b600435906001600160a01b038216820361060e57565b60c435906001600160a01b038216820361060e57565b604090600319011261060e576004359060243590565b3360009081527fb9cbbae02fe941283ec0eefd7b121e3bc7f89fae077b27bdd75a7fd4cf1543a860205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16156128145750565b3360009081527fab0abe0ac784c8cb7ff2dde6fca8a20d1ab21f792e5ef34b43f146db4890393c60205260409020547fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc19060ff16156128145750565b80600052600160205260406000203360005260205260ff60406000205416156128145750565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416156000146137bc5780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526001602052604083209160018060a01b03169182845260205260ff6040842054166000146137bc578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b1561383f57565b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152fd5b1561388a57565b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b156138e057565b60405162461bcd60e51b815260206004820152602260248201527f5465616d2077616c6c65742063616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608490fd5b6001600160401b0381116106315760051b60200190565b818110613952575050565b60008155600101613947565b6000198114611dc35760010190565b1561397457565b60405162461bcd60e51b815260206004820152601560248201527450726f6a656374206973206e6f742061637469766560581b6044820152606490fd5b9081602091031261060e5751801515810361060e5790565b91908201809211611dc357565b80548210156139ee5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60ff60005416613a1057565b60405163d93c066560e01b8152600490fd5b15613a2957565b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420686173206e6f7420656e64656420796574000000000000006044820152606490fd5b15613a7557565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e2066696e604482015264616c697a6560d81b6064820152608490fd5b15613acf57565b60405162461bcd60e51b815260206004820152601c60248201527f50726f6a65637420697320616c72656164792066696e616c697a6564000000006044820152606490fd5b9060009291805491613b25836132aa565b918282526001938481169081600014613b875750600114613b47575b50505050565b90919394506000526020928360002092846000945b838610613b73575050505001019038808080613b41565b805485870183015294019385908201613b5c565b9294505050602093945060ff191683830152151560051b01019038808080613b41565b80518210156139ee5760209160051b010190565b15613bc557565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bda9958dd08125160721b6044820152606490fd5b60405190613c0c826132e4565b8161022060609182815282602082015260009283604083015283818301528360808301528360a08301528360c08301528360e08301528061010083015283610120830152836101408301528061016083015283610180830152836101a0830152836101c08301526101e0820152826102008201520152565b90613c8e82613930565b613c9b6040519182613300565b8281528092613cac601f1991613930565b019060005b828110613cbd57505050565b602090613cc8613bff565b82828501015201613cb1565b9060405191828154918282526020928383019160005283600020936000905b828210613d095750505061335f92500383613300565b85546001600160a01b031684526001958601958895509381019390910190613cf356fea264697066735822122011c7c3dc365246ab69615d529809216abce7a9aeedadd89ab163bfe03527513164736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
  "deployedBytecode": "0x60a0806040526004361015610060575b50361561001b57600080fd5b60405162461bcd60e51b815260206004820152601a60248201527f455448207472616e7366657273206e6f742061636365707465640000000000006044820152606490fd5b60003560e01c90816301ffc9a714613257575080630c87dd3b146132205780630f717a6314613169578063107046bd14612fe95780631124acf414612ee0578063155dd5ee14612d44578063248a9ca314612d1557806329dd059b14612bf05780632a661dac14612a795780632e4efe95146128715780632f2ff15d14612832578063346ab5f21461273257806336568abe146126eb57806336fbad26146126cd5780633c1ab00f1461268a5780633f4ba83a146126205780635a18cd93146125f15780635c975abb146125ce5780635ebc4106146124bc57806378065f271461249357806378e9f080146122c05780637f11dfdf1461225c5780638456cb591461220257806387f3d223146120b35780638898303314611eb65780638c59091714611c2f5780638f61f4f514611bf457806391d1485414611ba75780639ee987b214611992578063a217fddf14611976578063c14e56561461192e578063d547741f146118ef578063d5842c8b14611705578063d5b8c0cd146116ca578063d9394d8314611611578063dcd1a3cc14610cfe578063e63ab1e914610cc3578063e6e5656c14610798578063e9b7fed41461074a578063f96b61cf146107215763fdd3df8614610230573861000f565b3461060e5761023e3661364d565b816000526003602052604060002061025c60ff60078301541661396d565b61026b60048201544211613a22565b60098101546001600160a01b031691610285338414613a6e565b61029660ff60108401541615613ac8565b600682015491600281015493848410156102dc575b857ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab4506602086886040519110158152a2005b85600095929493955260036020526008604060002001908154906102ff82613930565b9161030d6040519384613300565b808352601f19938461031e83613930565b0136602086013761032e82613930565b9461033c6040519687613300565b82865261034883613930565b0136602087013760005b8281106106ae5750505060018060a01b03600754169160405197886000895461037a816132aa565b906001811690811561068a5750600114610647575b506103b4918167205469636b65747360c01b600893520360171981018c52018a613300565b6040519867464c4958544b542360c01b60208b01528a60288b015260288a528960608101106001600160401b0360608c011117610631578a91959493926104726104618c61043161048395600a8f6060850160405201549763941a0a8b60e01b6060850152606484015261016060848401526101c48301906133c7565b9960c461044b6063199c8d8582030160a4860152846133c7565b9201528d81038a0160e48f0152600b8d01613b14565b8c810389016101048e01528b613b14565b90878c8303016101248d0152613407565b94898603016101448a01526020808551968781520194019460005b81811061061b57505061016489018690526101848901526101a4880152602092506060870191879003605f19019082906000905af180156105be576000906105ca575b600c840180546001600160a01b0319166001600160a01b039283161790556005805490850154600686015460405163a9059cbb60e01b815291841660048301526024820152955060209186911681600081604481015b03925af19283156105be577ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab450694602094610591575b506010600160ff198060078501541660078501558284015416179101559281926102ab565b6105b090853d87116105b7575b6105a88183613300565b8101906139b1565b503861056c565b503d61059e565b6040513d6000823e3d90fd5b50926020813d602011610613575b816105e860209360608401613300565b8101031261060e5760600151926001600160a01b038416840361060e57610537936104e1565b600080fd5b3d91506105d8565b865186526020968701969095019460010161049e565b634e487b7160e01b600052604160045260246000fd5b915050886000528960206000206000905b83821061067157509091820160200190506103b461038f565b8082936020809460019454920101520191018b91610658565b60ff1916602085810191909152821515909202840190910191506103b4905061038f565b806106bc61071c92846139d6565b905460039190911b1c6001600160a01b03166106d88288613baa565b528b600052600660205260406000206106f182856139d6565b60018060a01b0391549060031b1c166000526020526040600020546107168289613baa565b5261395e565b610352565b3461060e57600036600319011261060e576007546040516001600160a01b039091168152602090f35b3461060e57604036600319011261060e5761076361360b565b600435600052600660205260406000209060018060a01b03166000526020526040806000205481519080151582526020820152f35b3461060e5761012036600319011261060e576001600160401b0360043560243582811161060e576107cd9036906004016135b5565b60443583811161060e576107e59036906004016135b5565b906107ee613637565b9160e43585811161060e576108079036906004016135b5565b946101043581811161060e576108219036906004016135b5565b9461082f6004548210613bbe565b6000526020916003835260406000209360018060a01b0396876009870154163303610c74578151848111610631578061086888546132aa565b93601f94858111610c46575b508790858311600114610be157600092610bd6575b50508160011b916000199060031b1c19161786555b8251928484116106315760019380858901926108ba84546132aa565b868111610ba8575b508890868311600114610b4557600092610b3a575b5050600019600383901b1c191690851b1790555b606435600287015560038601956084358755600481019960a4358b55896005830199166001600160601b0360a01b8a5416178955600b8201908051908782116106315761093883546132aa565b868111610b0c575b508890868311600114610aa457600f9493929160009183610a99575b5050600019600383901b1c191690871b1790555b019481519485116106315761098586546132aa565b838111610a61575b50809285116001146109ee575092806109e199959381936109d898966000946109e3575b50501b916000199060031b1c19161790555b54906109d142831015613838565b5411613883565b541615156138d9565b005b015192508b806109b1565b9190601f9493941984168660005283600020936000905b828210610a4a575050916109d897959391856109e19c98969410610a31575b505050811b0190556109c3565b015160001960f88460031b161c19169055898080610a24565b808886978294978701518155019601940190610a05565b610a8a9087600052826000208580890160051c820192858a10610a90575b0160051c0190613947565b8a61098d565b92508192610a7f565b015190508e8061095c565b9392918791601f19821690846000528b6000209160005b8d828210610af65750509683600f9810610add575b505050811b019055610970565b015160001960f88460031b161c191690558e8080610ad0565b838a015185558c96909401939283019201610abb565b610b3490846000528a6000208880860160051c8201928d8710610a90570160051c0190613947565b8d610940565b015190508c806108d7565b908793508460005289600020916000601f198516905b8c828210610b925750508411610b79575b505050811b0190556108eb565b015160001960f88460031b161c191690558c8080610b6c565b8385015186558b97909501949384019301610b5b565b610bd090856000528a6000208880860160051c8201928d8710610a90570160051c0190613947565b8d6108c2565b015190508b80610889565b60008a81528981209350601f198516905b8a828210610c30575050908460019594939210610c17575b505050811b01865561089e565b015160001960f88460031b161c191690558b8080610c0a565b6001859682939686015181550195019301610bf2565b610c6e908a600052896000208780860160051c8201928c8710610a90570160051c0190613947565b8c610874565b60405162461bcd60e51b815260048101869052602160248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e206564696044820152601d60fa1b6064820152608490fd5b3461060e57600036600319011261060e5760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b3461060e5761014036600319011261060e576004356001600160401b03811161060e57610d2f9036906004016135b5565b6024356001600160401b03811161060e57610d4e9036906004016135b5565b9060a4356001600160a01b038116810361060e57610d6a613637565b92610104356001600160401b03811161060e57610d8b9036906004016135b5565b90610124356001600160401b03811161060e57610dac9036906004016135b5565b610db46136bf565b610dc2426064351015613838565b610dd160643560843511613883565b610de56001600160a01b03851615156138d9565b605a60e435116115ba576007546001600160a01b03161561157557600454956040518060208101106001600160401b0360208301111761063157602081016040526000815260405193610e37856132e4565b878552602085015260443560408501526064356060850152608435608085015260018060a01b03861660a0850152600060c0850152600160e085015261010084015260018060a01b031661012083015260e435610140830152826101608301526000610180830152856101a083015260006101c08301526101e082015260006102008201526000610220820152846000526003602052604060002081518051906001600160401b038211610631578190610ef184546132aa565b601f8111611543575b50602090601f83116001146114d7576000926114cc575b50508160011b916000199060031b1c19161781555b60208201518051906001600160401b038211610631578190610f4b60018501546132aa565b601f8111611497575b50602090601f83116001146114255760009261141a575b50508160011b916000199060031b1c19161760018201555b6040820151600282015560608201516003820155608082015160048201556005810160018060a01b0360a0840151166001600160601b0360a01b82541617905560c08201516006820155610fec60e08301511515600783019060ff801983541691151516179055565b6101008201518051906001600160401b03821161063157600160401b82116106315760209060088401548360088601558084106113fa575b500160088301600052602060002060005b8381106113dd57505050506009810160018060a01b03610120840151166001600160601b0360a01b825416179055610140820151600a8201556101608201518051906001600160401b038211610631578190611094600b8501546132aa565b601f81116113a8575b50602090601f83116001146113365760009261132b575b50508160011b916000199060031b1c191617600b8201555b600c810160018060a01b03610180840151166001600160601b0360a01b8254161790556101a0820151600d8201556101c0820151600e8201556101e08201518051906001600160401b03821161063157611129600f8401546132aa565b601f81116112eb575b50602090601f8311600114611247579361022060106111f49895857f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9b99966111d0966112379a60009261123c575b50508160011b916000199060031b1c191617600f8201555b01916111b86102008201511515849060ff801983541691151516179055565b0151815461ff00191690151560081b61ff0016179055565b6111db60045461395e565b60045560405194859461010086526101008601906133c7565b6044356020860152606435604086015260843560608601526001600160a01b0390921660808501523360a085015260e43560c085015283820360e08501526133c7565b0390a2005b015190508e80611181565b90600f840160005260206000209160005b601f19851681106112d3575060106111f498956001866111d0966112379a96610220967f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9f9d9a601f198116106112ba575b505050811b01600f820155611199565b015160001960f88460031b161c191690558e80806112aa565b91926020600181928685015181550194019201611258565b61131b90600f85016000526020600020601f850160051c81019160208610611321575b601f0160051c0190613947565b88611132565b909150819061130e565b0151905088806110b4565b9250600b84016000526020600020906000935b601f198416851061138d576001945083601f19811610611374575b505050811b01600b8201556110cc565b015160001960f88460031b161c19169055888080611364565b81810151835560209485019460019093019290910190611349565b6113d790600b86016000526020600020601f850160051c8101916020861061132157601f0160051c0190613947565b8961109d565b82516001600160a01b031681830155602090920191600101611035565b611414906008860160005284846000209182019101613947565b89611024565b015190508880610f6b565b9250600184016000526020600020906000935b601f198416851061147c576001945083601f19811610611463575b505050811b016001820155610f83565b015160001960f88460031b161c19169055888080611453565b81810151835560209485019460019093019290910190611438565b6114c690600186016000526020600020601f850160051c8101916020861061132157601f0160051c0190613947565b89610f54565b015190508880610f11565b9250836000526020600020906000935b601f1984168510611528576001945083601f1981161061150f575b505050811b018155610f26565b015160001960f88460031b161c19169055888080611502565b818101518355602094850194600190930192909101906114e7565b61156f90856000526020600020601f850160051c8101916020861061132157601f0160051c0190613947565b89610efa565b60405162461bcd60e51b815260206004820152601d60248201527f5469636b65744d616e61676572206e6f7420696e697469616c697a65640000006044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f50726f6669742073686172652070657263656e746167652063616e6e6f74206560448201526878636565642039302560b81b6064820152608490fd5b3461060e57602036600319011261060e5760043561162d613663565b61163a6004548210613bbe565b8060005260036020526007604060002001805460ff81166116855760ff191660011790557ff87e623aca5b8bef3f4a5f8a900ecd4c0367b153c2d476a78b65a68661ba7a25600080a2005b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920616374697665000000000000006044820152606490fd5b3461060e57600036600319011261060e5760206040517f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc98152f35b3461060e5760208060031936011261060e5761171f613621565b600454906001600160a01b03908116906000805b8481106118b2575061174490613c84565b9360009160005b85811061176457604051806117608982613553565b0390f35b806000526003808452604060002083600982015416878114611792575b50505061178d9061395e565b61174b565b9161178d9396916118a993604051926117aa846132e4565b6117b383613321565b84526117c160018401613321565b89850152600283015460408501528201546060840152600482015460808401528660058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611818848301613cd4565b610100870152610120860152600a81015461014086015261183b600b8201613321565b61016086015288600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611870600f8201613321565b6101e086015201549082821615156102008501521c161515610220820152611898828b613baa565b526118a3818a613baa565b5061395e565b93908880611781565b8060005260038652838360096040600020015416146118da575b6118d59061395e565b611733565b906118e76118d59161395e565b9190506118cc565b3461060e57604036600319011261060e576109e160043561190e61360b565b9080600052600160205261192960016040600020015461371b565b6137c1565b3461060e57604036600319011261060e5761194761360b565b600435600052600660205260406000209060018060a01b03166000526020526020604060002054604051908152f35b3461060e57600036600319011261060e57602060405160008152f35b3461060e5760208060031936011261060e57600435806000526003808352604060002091600783016119c760ff82541661396d565b6119d660048501544211613a22565b60098401546001600160a01b0393906119f29085163314613a6e565b6010850191611a0560ff84541615613ac8565b6006928387015460028801541115611b3c5790956008019060005b8254811015611b275786611a3482856139d6565b905490861b1c169086600052858a526040600020826000528a52604060002054611a68575b611a63915061395e565b611a20565b6000878152868b5260408082208483528c5280822054898352888d528183208584528d52818320839055600554915163a9059cbb60e01b81526001600160a01b038616600482015260248101829052949290918d91869160449183918f165af19384156105be578c8a927fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237292611a6397611b0a575b50604051908152a3611a59565b611b2090833d85116105b7576105a88183613300565b508f611afd565b50865460ff1990811688558154166001179055005b60405162461bcd60e51b815260048101899052603b60248201527f5468652070726f6a656374206861732072656163686564207468652066756e6460448201527f696e6720476f616c20736f6d657468696e672069732077726f6e6700000000006064820152608490fd5b3461060e57604036600319011261060e57611bc061360b565b600435600052600160205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461060e57600036600319011261060e5760206040517fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc18152f35b3461060e57611c3d3661364d565b90611c46613a04565b80600052602060038152604060002090611c6660ff60078401541661396d565b60038201544210611e725760048201544211611e3a578315611df657600060018060a01b03928284600554166064604051809581936323b872dd60e01b83523360048401523060248401528b60448401525af19182156105be57600892611dd9575b5060068101611cd88782546139c9565b9055846000526006835260406000203360005283526040600020611cfd8782546139c9565b9055019182549283158015611d99575b611d42575b50507fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b3991506040519384523393a3005b600160401b8410156106315783611d7f9160017fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b39960181556139d6565b819291549060031b9133831b921b19161790558480611d12565b506000198401848111611dc357611db18391836139d6565b905460039190911b1c16331415611d0d565b634e487b7160e01b600052601160045260246000fd5b611def90843d86116105b7576105a88183613300565b5086611cc8565b6064906040519062461bcd60e51b82526004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b6064906040519062461bcd60e51b825260048201526011602482015270141c9bda9958dd081a185cc8195b991959607a1b6044820152fd5b6064906040519062461bcd60e51b82526004820152601b60248201527f50726f6a65637420686173206e6f7420737461727465642079657400000000006044820152fd5b3461060e57600036600319011261060e576004546000805b82811061205f5750611edf90613c84565b906000805b828110611ef957604051806117608682613553565b80600052600360209080825260406000209081015480421080612051575b611f2d575b505050611f289061395e565b611ee4565b91611f289394916120489360405192611f45846132e4565b611f4e83613321565b8452611f5c60018401613321565b908401526002820154604084015260608301526004810154608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611fb7848301613cd4565b61010087015280600983015416610120870152600a820154610140870152611fe1600b8301613321565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c0860152612015600f8201613321565b6101e086015201549082821615156102008501521c16151561022082015261203d8288613baa565b526118a38187613baa565b91908580611f1c565b5060ff600783015416611f17565b80600052600380602052604060002090810154421090816120a4575b5061208f575b61208a9061395e565b611ece565b9061209c61208a9161395e565b919050612081565b60ff915060070154168461207b565b3461060e57602036600319011261060e576004356120cf613bff565b506120dd6004548210613bbe565b6000526003602052611760604060002060ff6010604051926120fe846132e4565b61210781613321565b845261211560018201613321565b602085015260028101546040850152600381015460608501526004810154608085015260058101546001600160a01b0390811660a0860152600682015460c086015260078201548416151560e086015261217160088301613cd4565b61010086015280600983015416610120860152600a82015461014086015261219b600b8301613321565b610160860152600c82015416610180850152600d8101546101a0850152600e8101546101c08501526121cf600f8201613321565b6101e08501520154818116151561020084015260081c161515610220820152604051918291602083526020830190613444565b3461060e57600036600319011261060e5761221b613663565b612223613a04565b600160ff1960005416176000557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461060e5760207f0d2b0de855a382608a438ffcbbe1803df7a3ed01f7f5624d816e5b378d190a5861228d3661364d565b6122989391936136bf565b6122a56004548510613bbe565b836000526003825280600e60406000200155604051908152a2005b3461060e57600036600319011261060e576004546000805b82811061245657506122e990613c84565b906000805b82811061230357604051806117608682613553565b806000526003602090808252604060002060108101549060ff92838316908161233b575b5050505050506123369061395e565b6122ee565b9161244a9593916123369798959360405195612356876132e4565b61235f84613321565b875261236d60018501613321565b908701526002830154604087015282015460608601526004820154608086015260058201546001600160a01b0390811660a0870152600683015460c087015260078301548516151560e087015260089261242891600f91906123d0868301613cd4565b6101008a0152806009830154166101208a0152600a8201546101408a01526123fa600b8301613321565b6101608a0152600c82015416610180890152600d8101546101a0890152600e8101546101c089015201613321565b6101e086015215156102008501521c16151561022082015261203d8288613baa565b91908580808080612327565b80600052600360205260ff6010604060002001541661247e575b6124799061395e565b6122d8565b9061248b6124799161395e565b919050612470565b3461060e57600036600319011261060e576005546040516001600160a01b039091168152602090f35b3461060e57602036600319011261060e576124d5613621565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff16156125af576007546001600160a01b039190828116612560576001600160a01b03191691169081176007556040519081527f347aa47069ceafe11306c3ddc5ac3c7428ffdc41b25817490247db1f5e636ce690602090a1005b60405162461bcd60e51b815260206004820152602160248201527f5469636b65744d616e6167657220616c726561647920696e697469616c697a656044820152601960fa1b6064820152608490fd5b60405163e2517d3f60e01b815233600482015260006024820152604490fd5b3461060e57600036600319011261060e57602060ff600054166040519015158152f35b3461060e57602036600319011261060e5760043560005260036020526020600660406000200154604051908152f35b3461060e57600036600319011261060e57612639613663565b60005460ff8116156126785760ff19166000557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b3461060e57602036600319011261060e5760043560005260036020526117606126b96008604060002001613cd4565b604051918291602083526020830190613407565b3461060e57600036600319011261060e576020600454604051908152f35b3461060e57604036600319011261060e5761270461360b565b336001600160a01b03821603612720576109e1906004356137c1565b60405163334bd91960e11b8152600490fd5b3461060e57604036600319011261060e576004356024358015159081810361060e573360009081527fa664834666e14c77a711dc0a124ad5de41c6cfa9ea0370153406653f1ce1111d60205260409020547f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc99060ff161561281457507fc99334413c7a541e7e874b3e4d302828e85dd94168e081e7b4c89cbf5decb4749161280b6020926127e36004548710613bbe565b856000526003845260106040600020019061ff00825491151560081b169061ff001916179055565b604051908152a2005b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3461060e57604036600319011261060e576109e160043561285161360b565b9080600052600160205261286c60016040600020015461371b565b613741565b3461060e5760208060031936011261060e576004356001600160401b03811161060e576128a29036906004016135b5565b60045490918083016000805b848110612a2457506128bf90613c84565b9360009160005b8581106128db57604051806117608982613553565b806000526003808652600b6128ff6129068260406000200160405192838092613b14565b0382613300565b8781519101208551852014612926575b50506129219061395e565b6128c6565b94612a1c918396612921946000528189526040600020906040519261294a846132e4565b61295383613321565b845261296160018401613321565b8b85015260028301546040850152820154606084015260048201546080840152601060018060a01b03928360058201541660a0860152600681015460c086015260ff9384600783015416151560e08701526129e86008946129c3868501613cd4565b61010089015282600985015416610120890152600a8401546101408901528301613321565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611870600f8201613321565b939088612916565b80600052600384526128ff612a46600b60406000200160405192838092613b14565b8481519101208651842014612a64575b612a5f9061395e565b6128ae565b90612a71612a5f9161395e565b919050612a56565b3461060e57600036600319011261060e576004546000805b828110612b985750612aa290613c84565b906000805b828110612abc57604051806117608682613553565b80600052600360209080825260406000209060048201549081421180612b87575b612af4575b50505050612aef9061395e565b612aa7565b91612b7d9391612aef95969360405193612b0d856132e4565b612b1684613321565b8552612b2460018501613321565b90850152600283015460408501528201546060840152608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611fb7848301613cd4565b9190858080612ae2565b506006830154600284015411612add565b8060005260036020526040600020600481015442119081612bdd575b50612bc8575b612bc39061395e565b612a91565b90612bd5612bc39161395e565b919050612bba565b9050600260068201549101541184612bb4565b3461060e57600036600319011261060e576004546000805b828110612cab5750612c1990613c84565b906000805b828110612c3357604051806117608682613553565b8060005260036020908082526040600020908101548042101580612c9d575b80612c8f575b612c6e575b505050612c699061395e565b612c1e565b91612c69939491612c869360405192611f45846132e4565b91908580612c5d565b5060ff600783015416612c58565b506004820154421115612c52565b806000526003806020526040600020908101544210159081612d06575b81612cf7575b50612ce2575b612cdd9061395e565b612c08565b90612cef612cdd9161395e565b919050612cd4565b60ff9150600701541684612cce565b60048101544211159150612cc8565b3461060e57602036600319011261060e5760043560005260016020526020600160406000200154604051908152f35b3461060e5760208060031936011261060e576004358060005260038252604060002060068352604060002033600052835260406000205415612ea45760038101544210908115612e96575b5015612e515760008181526006808452604080832033808552908652818420548585529286528184208185528652818420849055600554915163a9059cbb60e01b815260048101919091526024810183905291949192829184916044918391906001600160a01b03165af19182156105be577fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237292612e34575b506040519384523393a3005b612e4a90823d84116105b7576105a88183613300565b5084612e28565b60405162461bcd60e51b815260048101839052601760248201527f50726f6a656374206973207374696c6c206163746976650000000000000000006044820152606490fd5b600491500154421183612d8f565b60405162461bcd60e51b81526004810184905260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b3461060e57600036600319011261060e576004546000805b828110612f905750612f0990613c84565b906000805b828110612f2357604051806117608682613553565b80600052600360209080825260406000209060048201549081421180612f7e575b612f5b575b50505050612f569061395e565b612f0e565b91612f749391612f5695969360405193612b0d856132e4565b9190858080612f49565b50600683015460028401541115612f44565b8060005260036020526040600020600481015442119081612fd5575b50612fc0575b612fbb9061395e565b612ef8565b90612fcd612fbb9161395e565b919050612fb2565b905060026006820154910154111584612fac565b3461060e57602036600319011261060e576004356000526003602052604060002061301381613321565b9061302060018201613321565b81600281015491600382015492600483015490600160a01b6001900391826005860154166006860154600787015460ff16908560098901541692600a89015494600b8a0161306d90613321565b97600c8b0154169a600d8b015499600e8c01549b600f0161308d90613321565b9d601001549e60405180608052610220809152608051016130ad916133c7565b60805180820390602001526130c1916133c7565b9760805160400152608051606001526080516080015260805160a0015260805160c00152151560805160e0015260805161010001526080516101200152608051808203906101400152613113916133c7565b92608051610160015260805161018001526080516101a00152608051808203906101c00152613141916133c7565b9060ff811615156080516101e0015260081c60ff161515608051610200015260805180910390f35b3461060e57602036600319011261060e57600435613185613663565b6131926004548210613bbe565b8060005260036020526007604060002001805460ff8116156131db5760ff191690557f9f505f325627bdd7f5a6dd8bcceecdc48a989f647561427d61d35b7a50703f79600080a2005b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920706175736564000000000000006044820152606490fd5b3461060e57602036600319011261060e576004356000526003602052602060018060a01b03600c6040600020015416604051908152f35b3461060e57602036600319011261060e576004359063ffffffff60e01b821680920361060e57602091637965db0b60e01b8114908115613299575b5015158152f35b6301ffc9a760e01b14905083613292565b90600182811c921680156132da575b60208310146132c457565b634e487b7160e01b600052602260045260246000fd5b91607f16916132b9565b61024081019081106001600160401b0382111761063157604052565b90601f801991011681019081106001600160401b0382111761063157604052565b9060405191826000825492613335846132aa565b9081845260019485811690816000146133a45750600114613361575b505061335f92500383613300565b565b9093915060005260209081600020936000915b81831061338c57505061335f93508201013880613351565b85548884018501529485019487945091830191613374565b91505061335f94506020925060ff191682840152151560051b8201013880613351565b919082519283825260005b8481106133f3575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016133d2565b90815180825260208080930193019160005b828110613427575050505090565b83516001600160a01b031685529381019392810192600101613419565b9061353661347061345e84516102408086528501906133c7565b602085015184820360208601526133c7565b6040840151604084015260608401516060840152608084015160808401526134fe6134d260018060a01b03928360a08801511660a087015260c087015160c087015260e0870151151560e0870152610100808801519087830390880152613407565b6101208381880151169086015261014080870151908601526101608087015190868303908701526133c7565b90610180908186015116908401526101a080850151908401526101c080850151908401526101e08085015190848303908501526133c7565b916102008082015115159083015261022080910151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106135875750505050505090565b90919293949584806135a5600193603f198682030187528a51613444565b9801930193019194939290613577565b81601f8201121561060e578035906001600160401b03821161063157604051926135e9601f8401601f191660200185613300565b8284526020838301011161060e57816000926020809301838601378301015290565b602435906001600160a01b038216820361060e57565b600435906001600160a01b038216820361060e57565b60c435906001600160a01b038216820361060e57565b604090600319011261060e576004359060243590565b3360009081527fb9cbbae02fe941283ec0eefd7b121e3bc7f89fae077b27bdd75a7fd4cf1543a860205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16156128145750565b3360009081527fab0abe0ac784c8cb7ff2dde6fca8a20d1ab21f792e5ef34b43f146db4890393c60205260409020547fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc19060ff16156128145750565b80600052600160205260406000203360005260205260ff60406000205416156128145750565b906000918083526001602052604083209160018060a01b03169182845260205260ff604084205416156000146137bc5780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526001602052604083209160018060a01b03169182845260205260ff6040842054166000146137bc578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b1561383f57565b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152fd5b1561388a57565b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b156138e057565b60405162461bcd60e51b815260206004820152602260248201527f5465616d2077616c6c65742063616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608490fd5b6001600160401b0381116106315760051b60200190565b818110613952575050565b60008155600101613947565b6000198114611dc35760010190565b1561397457565b60405162461bcd60e51b815260206004820152601560248201527450726f6a656374206973206e6f742061637469766560581b6044820152606490fd5b9081602091031261060e5751801515810361060e5790565b91908201809211611dc357565b80548210156139ee5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60ff60005416613a1057565b60405163d93c066560e01b8152600490fd5b15613a2957565b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420686173206e6f7420656e64656420796574000000000000006044820152606490fd5b15613a7557565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e2066696e604482015264616c697a6560d81b6064820152608490fd5b15613acf57565b60405162461bcd60e51b815260206004820152601c60248201527f50726f6a65637420697320616c72656164792066696e616c697a6564000000006044820152606490fd5b9060009291805491613b25836132aa565b918282526001938481169081600014613b875750600114613b47575b50505050565b90919394506000526020928360002092846000945b838610613b73575050505001019038808080613b41565b805485870183015294019385908201613b5c565b9294505050602093945060ff191683830152151560051b01019038808080613b41565b80518210156139ee5760209160051b010190565b15613bc557565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bda9958dd08125160721b6044820152606490fd5b60405190613c0c826132e4565b8161022060609182815282602082015260009283604083015283818301528360808301528360a08301528360c08301528360e08301528061010083015283610120830152836101408301528061016083015283610180830152836101a0830152836101c08301526101e0820152826102008201520152565b90613c8e82613930565b613c9b6040519182613300565b8281528092613cac601f1991613930565b019060005b828110613cbd57505050565b602090613cc8613bff565b82828501015201613cb1565b9060405191828154918282526020928383019160005283600020936000905b828210613d095750505061335f92500383613300565b85546001600160a01b031684526001958601958895509381019390910190613cf356fea264697066735822122011c7c3dc365246ab69615d529809216abce7a9aeedadd89ab163bfe03527513164736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3294,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2408,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)2403_storage)"
      },
      {
        "astId": 3413,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "_status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5781,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Project)5776_storage)"
      },
      {
        "astId": 5783,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "projectCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5786,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "fundingToken",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)3060"
      },
      {
        "astId": 5792,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "projectInvestments",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 5795,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "ticketManager",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(ITicketManager)5709"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)3060": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ITicketManager)5709": {
        "encoding": "inplace",
        "label": "contract ITicketManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)2403_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)2403_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Project)5776_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct LaunchPad.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)5776_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)5776_storage": {
        "encoding": "inplace",
        "label": "struct LaunchPad.Project",
        "members": [
          {
            "astId": 5740,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5742,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 5744,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "fundingGoal",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5746,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "startTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5748,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "endTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5750,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "teamWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 5752,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "totalFunded",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5754,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "isActive",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 5757,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "contributors",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 5759,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "creator",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          },
          {
            "astId": 5761,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "profitSharePercentage",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 5763,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "category",
            "offset": 0,
            "slot": "11",
            "type": "t_string_storage"
          },
          {
            "astId": 5765,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "ticketCollection",
            "offset": 0,
            "slot": "12",
            "type": "t_address"
          },
          {
            "astId": 5767,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "projectId",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          },
          {
            "astId": 5769,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "daoProposalId",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256"
          },
          {
            "astId": 5771,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "teaserURI",
            "offset": 0,
            "slot": "15",
            "type": "t_string_storage"
          },
          {
            "astId": 5773,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "isFinalized",
            "offset": 0,
            "slot": "16",
            "type": "t_bool"
          },
          {
            "astId": 5775,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "teamKycVerified",
            "offset": 1,
            "slot": "16",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "544"
      },
      "t_struct(RoleData)2403_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 2400,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 2402,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}