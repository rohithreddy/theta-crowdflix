{
  "address": "0xB0C0775A8aE52938302345401902b661fd2F9F82",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_fundingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialAdmin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialProposer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialPauser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialTeamOps",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Contributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "daoProposalId",
          "type": "uint256"
        }
      ],
      "name": "DaoProposalIdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundingGoal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "teamWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profitSharePercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "category",
          "type": "string"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "ProjectFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectUnpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "TeamKYCChecked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ticketManagerAddress",
          "type": "address"
        }
      ],
      "name": "TicketManagerInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEAM_OPS_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_fundingGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_teamWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profitSharePercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_teaserURI",
          "type": "string"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newDescription",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_newFundingGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newEndTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newTeamWallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_newCategory",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newTeaserURI",
          "type": "string"
        }
      ],
      "name": "editProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ticketPrice",
          "type": "uint256"
        }
      ],
      "name": "finalizeProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getContributors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFailedProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFinalizedProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectByProjectId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getProjectsByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        }
      ],
      "name": "getProjectsByCategory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProjectsInProgress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSuccessfulProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getTicketCollectionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUpcomingProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "teamWallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalFunded",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "contributors",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "profitSharePercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ticketCollection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daoProposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "teaserURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isFinalized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "teamKycVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct LaunchPad.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ticketManagerAddress",
          "type": "address"
        }
      ],
      "name": "initializeTicketManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "pauseProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "projectInvestments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "fundingGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "teamWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalFunded",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "profitSharePercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "category",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ticketCollection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "daoProposalId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "teaserURI",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isFinalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "teamKycVerified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "refundInvestors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_daoProposalId",
          "type": "uint256"
        }
      ],
      "name": "setDaoProposalId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "setTeamKycVerified",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_videoURI",
          "type": "string"
        }
      ],
      "name": "setVideoURL",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketManager",
      "outputs": [
        {
          "internalType": "contract ITicketManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "totalFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "unpauseProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "userContribution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x646d984c86445e54f01f70031b8247ab193ee519a2a28c3261a8def8c96384ab",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0xc609039aB9266a558ac84AA0067aaf26B24264b9",
    "contractAddress": "0xB0C0775A8aE52938302345401902b661fd2F9F82",
    "transactionIndex": 1,
    "gasUsed": "4571589",
    "logsBloom": "0x
    "blockHash": "0xd2cfbea79d5d46013ae305b6fb31a38d08a42e1f22b8da8a869cfbb2e22a9af4",
    "transactionHash": "0x646d984c86445e54f01f70031b8247ab193ee519a2a28c3261a8def8c96384ab",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 27354034,
        "transactionHash": "0x646d984c86445e54f01f70031b8247ab193ee519a2a28c3261a8def8c96384ab",
        "address": "0xB0C0775A8aE52938302345401902b661fd2F9F82",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd2cfbea79d5d46013ae305b6fb31a38d08a42e1f22b8da8a869cfbb2e22a9af4"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 27354034,
        "transactionHash": "0x646d984c86445e54f01f70031b8247ab193ee519a2a28c3261a8def8c96384ab",
        "address": "0xB0C0775A8aE52938302345401902b661fd2F9F82",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
          "0x0000000000000000000000003dfb313627bc0ba3d958f72d086adef2ecb2ac64",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xd2cfbea79d5d46013ae305b6fb31a38d08a42e1f22b8da8a869cfbb2e22a9af4"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 27354034,
        "transactionHash": "0x646d984c86445e54f01f70031b8247ab193ee519a2a28c3261a8def8c96384ab",
        "address": "0xB0C0775A8aE52938302345401902b661fd2F9F82",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xd2cfbea79d5d46013ae305b6fb31a38d08a42e1f22b8da8a869cfbb2e22a9af4"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 27354034,
        "transactionHash": "0x646d984c86445e54f01f70031b8247ab193ee519a2a28c3261a8def8c96384ab",
        "address": "0xB0C0775A8aE52938302345401902b661fd2F9F82",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9",
          "0x000000000000000000000000c609039ab9266a558ac84aa0067aaf26b24264b9"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xd2cfbea79d5d46013ae305b6fb31a38d08a42e1f22b8da8a869cfbb2e22a9af4"
      }
    ],
    "blockNumber": 27354034,
    "cumulativeGasUsed": "4571589",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6DDc4b74C370129cEB84AD566db1AfD0d1A2ab02",
    "0xc609039aB9266a558ac84AA0067aaf26B24264b9",
    "0x3dfB313627Bc0Ba3D958F72D086adeF2ecb2Ac64",
    "0xc609039aB9266a558ac84AA0067aaf26B24264b9",
    "0xc609039aB9266a558ac84AA0067aaf26B24264b9"
  ],
  "numDeployments": 1,
  "solcInputHash": "7e1173aa758d31fd511abef290f6b468",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_fundingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialProposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialPauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialTeamOps\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"}],\"name\":\"DaoProposalIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ProjectFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"TeamKYCChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ticketManagerAddress\",\"type\":\"address\"}],\"name\":\"TicketManagerInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_OPS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_teamWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_teaserURI\",\"type\":\"string\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_newFundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newEndTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newTeamWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_newCategory\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newTeaserURI\",\"type\":\"string\"}],\"name\":\"editProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPrice\",\"type\":\"uint256\"}],\"name\":\"finalizeProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getContributors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFailedProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFinalizedProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectByProjectId\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getProjectsByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"}],\"name\":\"getProjectsByCategory\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectsInProgress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuccessfulProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getTicketCollectionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUpcomingProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchPad.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ticketManagerAddress\",\"type\":\"address\"}],\"name\":\"initializeTicketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"pauseProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"projectInvestments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFunded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"profitSharePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ticketCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"teaserURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"teamKycVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"refundInvestors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_daoProposalId\",\"type\":\"uint256\"}],\"name\":\"setDaoProposalId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setTeamKycVerified\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_videoURI\",\"type\":\"string\"}],\"name\":\"setVideoURL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketManager\",\"outputs\":[{\"internalType\":\"contract ITicketManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"totalFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"unpauseProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userContribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LaunchPad.sol\":\"LaunchPad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/ITicketManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ITicketManager {\\n    function createTicketCollection(\\n        uint256 _projectId,\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _price,\\n        string memory _category,\\n        string memory _title,\\n        address[] memory _investors,\\n        uint256[] memory _investment_amounts, \\n        uint256 _fundingGoal, \\n        uint256 _profitSharePercentage, \\n        address _creator\\n\\n    ) external returns (address);\\n\\n    // Add the getTicketsSold function to the interface\\n    function getTicketsSold(uint256 _projectId) external view returns (uint256);\\n\\n    // Add the setVideoURL function to the interface\\n    function setVideoURL(uint256 _projectId, string memory _videoURL) external;\\n}\\n\",\"keccak256\":\"0xede361e9e75cdc02368a2fb1e7af27d19208bd9e013dd366f499f5f6e8b9eca8\",\"license\":\"MIT\"},\"contracts/LaunchPad.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"./ITicketManager.sol\\\";\\n\\ncontract LaunchPad is Pausable, AccessControl, ReentrancyGuard {\\n    bytes32 public constant PROPOSER_ROLE = keccak256(\\\"PROPOSER_ROLE\\\");\\n    bytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n    bytes32 public constant TEAM_OPS_ROLE = keccak256(\\\"TEAM_OPS_ROLE\\\"); // New role for KYC checks\\n\\n    struct Project {\\n        string name;\\n        string description;\\n        uint256 fundingGoal;\\n        uint256 startTime;\\n        uint256 endTime;\\n        address teamWallet;\\n        uint256 totalFunded;\\n        bool isActive; // Added isActive flag\\n        address[] contributors;\\n        address creator;\\n        uint256 profitSharePercentage;\\n        string category;\\n        address ticketCollection;\\n        uint256 projectId;\\n        uint256 daoProposalId;\\n        string teaserURI;\\n        bool isFinalized; // Added to track if the project has been finalized\\n        bool teamKycVerified; // New field for KYC status\\n    }\\n\\n    mapping(uint256 => Project) public projects;\\n    uint256 public projectCount;\\n    IERC20 public fundingToken;\\n    mapping(uint256 => mapping(address => uint256)) public projectInvestments;\\n\\n    ITicketManager public ticketManager;\\n\\n    event ProjectCreated(\\n        uint256 indexed projectId,\\n        string name,\\n        uint256 fundingGoal,\\n        uint256 startTime,\\n        uint256 endTime,\\n        address teamWallet,\\n        address creator,\\n        uint256 profitSharePercentage,\\n        string category\\n    );\\n\\n    event Contributed(uint256 indexed projectId, address indexed contributor, uint256 amount);\\n    event Withdrawn(uint256 indexed projectId, address indexed recipient, uint256 amount);\\n    event ProjectFinalized(uint256 indexed projectId, bool success);\\n    event TicketManagerInitialized(address ticketManagerAddress);\\n    event DaoProposalIdSet(uint256 indexed projectId, uint256 daoProposalId);\\n    event ProjectPaused(uint256 indexed projectId);\\n    event ProjectUnpaused(uint256 indexed projectId);\\n    event TeamKYCChecked(uint256 indexed projectId, bool status); // New event for KYC status change\\n\\n    constructor(IERC20 _fundingToken, address _initialAdmin, address _initialProposer, address _initialPauser, address _initialTeamOps) {\\n        fundingToken = _fundingToken;\\n        _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin);\\n        _grantRole(PROPOSER_ROLE, _initialProposer);\\n        _grantRole(PAUSER_ROLE, _initialPauser);\\n        _grantRole(TEAM_OPS_ROLE, _initialTeamOps); // Grant TEAM_OPS role to the initial address\\n    }\\n\\n    function initializeTicketManager(address _ticketManagerAddress) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n        require(address(ticketManager) == address(0), \\\"TicketManager already initialized\\\");\\n        ticketManager = ITicketManager(_ticketManagerAddress);\\n        emit TicketManagerInitialized(_ticketManagerAddress);\\n    }\\n\\n\\n    function createProject(\\n        string memory _name,\\n        string memory _description,\\n        uint256 _fundingGoal,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _teamWallet,\\n        address _creator,\\n        uint256 _profitSharePercentage,\\n        string memory _category,\\n        string memory _teaserURI\\n    ) public onlyRole(PROPOSER_ROLE) {\\n        require(_startTime >= block.timestamp, \\\"Start time must be in the future\\\");\\n        require(_endTime > _startTime, \\\"End time must be after start time\\\");\\n        require(_teamWallet != address(0), \\\"Team wallet cannot be zero address\\\");\\n        require(_profitSharePercentage <= 90, \\\"Profit share percentage cannot exceed 90%\\\");\\n        require(address(ticketManager) != address(0), \\\"TicketManager not initialized\\\");\\n\\n        uint256 projectId = projectCount;\\n        projects[projectId] = Project({\\n            name: _name,\\n            description: _description,\\n            fundingGoal: _fundingGoal,\\n            startTime: _startTime,\\n            endTime: _endTime,\\n            totalFunded: 0,\\n            isActive: true, // Initialize isActive as true\\n            teamWallet: _teamWallet,\\n            contributors: new address[](0),\\n            creator: _creator,\\n            profitSharePercentage: _profitSharePercentage,\\n            category: _category,\\n            ticketCollection: address(0),\\n            projectId: projectId,\\n            daoProposalId: 0,\\n            teaserURI: _teaserURI,\\n            isFinalized: false, // Initialize as not finalized\\n            teamKycVerified: false // Initialize KYC status as not checked\\n        });\\n\\n        projectCount++;\\n\\n        emit ProjectCreated(projectId, _name, _fundingGoal, _startTime, _endTime, _teamWallet, msg.sender, _profitSharePercentage, _category);\\n    }\\n\\n    function contribute(uint256 _projectId, uint256 _amount) public whenNotPaused {\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is not active\\\"); // Added isActive check\\n        require(block.timestamp >= project.startTime, \\\"Project has not started yet\\\");\\n        require(block.timestamp <= project.endTime, \\\"Project has ended\\\");\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n\\n        fundingToken.transferFrom(msg.sender, address(this), _amount);\\n        project.totalFunded += _amount;\\n        projectInvestments[_projectId][msg.sender] += _amount;\\n\\n        if (project.contributors.length == 0 || project.contributors[project.contributors.length - 1] != msg.sender) {\\n            project.contributors.push(msg.sender);\\n        }\\n\\n        emit Contributed(_projectId, msg.sender, _amount);\\n    }\\n\\n   function finalizeProject(uint256 _projectId, uint256 _ticketPrice) public {\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is not active\\\"); \\n        require(block.timestamp > project.endTime, \\\"Project has not ended yet\\\");\\n        require(msg.sender == project.creator, \\\"Only the project creator can finalize\\\");\\n        require(!project.isFinalized, \\\"Project is already finalized\\\");\\n\\n        \\n        bool success = project.totalFunded >= project.fundingGoal;\\n\\n        if (success) {\\n             (address[] memory investors, uint256[] memory investment_amounts) = _getContributorData(_projectId);\\n            project.ticketCollection = ticketManager.createTicketCollection(\\n                _projectId,\\n                string(abi.encodePacked(project.name, \\\" Tickets\\\")),\\n                string(abi.encodePacked(\\\"FLIXTKT#\\\", _projectId)),\\n                _ticketPrice,\\n                project.category,\\n                project.name,\\n                investors,\\n                investment_amounts, \\n                project.fundingGoal,\\n                project.profitSharePercentage,\\n                project.creator\\n            );\\n            fundingToken.transfer(project.teamWallet, project.totalFunded);\\n            project.isActive = false; \\n            project.isFinalized = true; \\n        }\\n        \\n\\n        emit ProjectFinalized(_projectId, success);\\n    }\\n    \\n    function _getContributorData(uint256 _projectId) private view returns (address[] memory, uint256[] memory) {\\n    Project storage project = projects[_projectId];\\n    uint256 count = project.contributors.length;\\n    address[] memory contributors = new address[](count);\\n    uint256[] memory amounts = new uint256[](count);\\n\\n    for (uint256 i = 0; i < count; i++) {\\n        contributors[i] = project.contributors[i];\\n        amounts[i] = projectInvestments[_projectId][project.contributors[i]];\\n    }\\n\\n    return (contributors, amounts);\\n}\\n\\n    function refundInvestors(uint256 _projectId) public {\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is not active\\\"); \\n        require(block.timestamp > project.endTime, \\\"Project has not ended yet\\\");\\n        require(msg.sender == project.creator, \\\"Only the project creator can finalize\\\");\\n        require(!project.isFinalized, \\\"Project is already finalized\\\");\\n        require(project.totalFunded < project.fundingGoal, \\\"The project has reached the funding Goal something is wrong\\\");\\n\\n        for (uint256 i = 0; i < project.contributors.length; i++) {\\n            address contributorAddress = project.contributors[i];\\n            if (projectInvestments[_projectId][contributorAddress] > 0) {\\n                uint256 refundAmount = projectInvestments[_projectId][contributorAddress];\\n                projectInvestments[_projectId][contributorAddress] = 0;\\n                fundingToken.transfer(contributorAddress, refundAmount);\\n                emit Withdrawn(_projectId, contributorAddress, refundAmount);\\n            }\\n        }\\n        project.isActive = false; \\n        project.isFinalized = true; \\n\\n    }\\n\\n    function withdrawFunds(uint256 _projectId) public {\\n        Project storage project = projects[_projectId];\\n        // Removed the requirement for project.isFinalized\\n        require(projectInvestments[_projectId][msg.sender] > 0, \\\"No funds to withdraw\\\");\\n        // Check if the project is active based on start and end dates\\n        require(block.timestamp < project.startTime || block.timestamp > project.endTime, \\\"Project is still active\\\");\\n\\n        uint256 amount = projectInvestments[_projectId][msg.sender];\\n        projectInvestments[_projectId][msg.sender] = 0; // Reset the contributor's investment\\n        fundingToken.transfer(msg.sender, amount); // Transfer the funds back to the contributor\\n\\n        emit Withdrawn(_projectId, msg.sender, amount);\\n    }\\n\\n    function pause() public onlyRole(PAUSER_ROLE) {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyRole(PAUSER_ROLE) {\\n        _unpause();\\n    }\\n\\n    function editProject(\\n        uint256 _projectId,\\n        string memory _newName,\\n        string memory _newDescription,\\n        uint256 _newFundingGoal,\\n        uint256 _newStartTime,\\n        uint256 _newEndTime,\\n        address _newTeamWallet,\\n        string memory _newCategory,\\n        string memory _newTeaserURI\\n    ) public {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        Project storage project = projects[_projectId];\\n        require(msg.sender == project.creator, \\\"Only the project creator can edit\\\");\\n\\n        project.name = _newName;\\n        project.description = _newDescription;\\n        project.fundingGoal = _newFundingGoal;\\n        project.startTime = _newStartTime;\\n        project.endTime = _newEndTime;\\n        project.teamWallet = _newTeamWallet;\\n        project.category = _newCategory;\\n        project.teaserURI = _newTeaserURI;\\n\\n        require(project.startTime >= block.timestamp, \\\"Start time must be in the future\\\");\\n        require(project.endTime > project.startTime, \\\"End time must be after start time\\\");\\n        require(project.teamWallet != address(0), \\\"Team wallet cannot be zero address\\\");\\n    }\\n\\n    function setDaoProposalId(uint256 _projectId, uint256 _daoProposalId) public onlyRole(PROPOSER_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        projects[_projectId].daoProposalId = _daoProposalId;\\n        emit DaoProposalIdSet(_projectId, _daoProposalId);\\n    }\\n\\n    function getProjectsByAddress(address _address) public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].creator == _address) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory projectsByAddress = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].creator == _address) {\\n                projectsByAddress[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return projectsByAddress;\\n    }\\n\\n    function getProjectsByCategory(string memory _category) public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (keccak256(bytes(projects[i].category)) == keccak256(bytes(_category))) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory projectsByCategory = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (keccak256(bytes(projects[i].category)) == keccak256(bytes(_category))) {\\n                projectsByCategory[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return projectsByCategory;\\n    }\\n\\n    function getProjectsInProgress() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp >= projects[i].startTime && block.timestamp <= projects[i].endTime && projects[i].isActive) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory inProgressProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp >= projects[i].startTime && block.timestamp <= projects[i].endTime && projects[i].isActive) {\\n                inProgressProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return inProgressProjects;\\n    }\\n\\n    function getSuccessfulProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            // Check if the project has ended and was successful\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded >= projects[i].fundingGoal) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory successfulProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            // Check if the project has ended and was successful\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded >= projects[i].fundingGoal) {\\n                successfulProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return successfulProjects;\\n    }\\n\\n    function getUpcomingProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp < projects[i].startTime && projects[i].isActive) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory upcomingProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp < projects[i].startTime && projects[i].isActive) {\\n                upcomingProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return upcomingProjects;\\n    }\\n\\n    function getFailedProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded < projects[i].fundingGoal) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory failedProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (block.timestamp > projects[i].endTime && projects[i].totalFunded < projects[i].fundingGoal) {\\n                failedProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return failedProjects;\\n    }\\n\\n    function getFinalizedProjects() public view returns (Project[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].isFinalized) {\\n                count++;\\n            }\\n        }\\n\\n        Project[] memory finalizedProjects = new Project[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            if (projects[i].isFinalized) {\\n                finalizedProjects[index] = projects[i];\\n                index++;\\n            }\\n        }\\n\\n        return finalizedProjects;\\n    }\\n    function getProjectByProjectId(uint256 _projectId) public view returns (Project memory) {\\n    require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n    return projects[_projectId];\\n    }\\n\\n    function totalFunded(uint256 _projectId) public view returns (uint256) {\\n        return projects[_projectId].totalFunded;\\n    }\\n\\n    function getTicketCollectionAddress(uint256 _projectId) public view returns (address) {\\n        return projects[_projectId].ticketCollection;\\n    }\\n\\n    function getContributors(uint256 _projectId) public view returns (address[] memory) {\\n        return projects[_projectId].contributors;\\n    }\\n\\n    function userContribution(uint256 _projectId, address _user) public view returns (bool, uint256) {\\n        uint256 amount = projectInvestments[_projectId][_user];\\n        return (amount > 0, amount);\\n    }\\n\\n    function setTeamKycVerified(uint256 _projectId, bool _status) public onlyRole(TEAM_OPS_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        projects[_projectId].teamKycVerified = _status;\\n        emit TeamKYCChecked(_projectId, _status);\\n    }\\n\\n    function setVideoURL(uint256 _projectId, string memory _videoURI) public {\\n        Project storage project = projects[_projectId];\\n        require(msg.sender == project.creator, \\\"Only the project creator can set the video URL\\\");\\n        require(project.isFinalized, \\\"Project must be finalized to set the video URL\\\");\\n\\n        // Call the ticketManager's setVideoURL function\\n        ticketManager.setVideoURL(_projectId, _videoURI);\\n    }\\n\\n  function pauseProject(uint256 _projectId) public onlyRole(PAUSER_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        Project storage project = projects[_projectId];\\n        require(project.isActive, \\\"Project is already paused\\\");\\n\\n        project.isActive = false;\\n        emit ProjectPaused(_projectId);\\n    }\\n\\n    function unpauseProject(uint256 _projectId) public onlyRole(PAUSER_ROLE) {\\n        require(_projectId < projectCount, \\\"Invalid project ID\\\");\\n        Project storage project = projects[_projectId];\\n        require(!project.isActive, \\\"Project is already active\\\");\\n\\n        project.isActive = true;\\n        emit ProjectUnpaused(_projectId);\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"ETH transfers not accepted\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x97d0ea39ff739df4480dcb2a7acc9842716108c2f8cbf5541b0878ab6a5f2039\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.22 <0.9.0;\\n\\nlibrary console {\\n    address constant CONSOLE_ADDRESS =\\n        0x000000000000000000636F6e736F6c652e6c6f67;\\n\\n    function _sendLogPayloadImplementation(bytes memory payload) internal view {\\n        address consoleAddress = CONSOLE_ADDRESS;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            pop(\\n                staticcall(\\n                    gas(),\\n                    consoleAddress,\\n                    add(payload, 32),\\n                    mload(payload),\\n                    0,\\n                    0\\n                )\\n            )\\n        }\\n    }\\n\\n    function _castToPure(\\n      function(bytes memory) internal view fnIn\\n    ) internal pure returns (function(bytes memory) pure fnOut) {\\n        assembly {\\n            fnOut := fnIn\\n        }\\n    }\\n\\n    function _sendLogPayload(bytes memory payload) internal pure {\\n        _castToPure(_sendLogPayloadImplementation)(payload);\\n    }\\n\\n    function log() internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n    }\\n    function logInt(int256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n    }\\n\\n    function logUint(uint256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n    }\\n\\n    function logString(string memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n    }\\n\\n    function logBool(bool p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n    }\\n\\n    function logAddress(address p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n    }\\n\\n    function logBytes(bytes memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n    }\\n\\n    function logBytes1(bytes1 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n    }\\n\\n    function logBytes2(bytes2 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n    }\\n\\n    function logBytes3(bytes3 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n    }\\n\\n    function logBytes4(bytes4 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n    }\\n\\n    function logBytes5(bytes5 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n    }\\n\\n    function logBytes6(bytes6 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n    }\\n\\n    function logBytes7(bytes7 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n    }\\n\\n    function logBytes8(bytes8 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n    }\\n\\n    function logBytes9(bytes9 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n    }\\n\\n    function logBytes10(bytes10 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n    }\\n\\n    function logBytes11(bytes11 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n    }\\n\\n    function logBytes12(bytes12 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n    }\\n\\n    function logBytes13(bytes13 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n    }\\n\\n    function logBytes14(bytes14 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n    }\\n\\n    function logBytes15(bytes15 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n    }\\n\\n    function logBytes16(bytes16 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n    }\\n\\n    function logBytes17(bytes17 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n    }\\n\\n    function logBytes18(bytes18 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n    }\\n\\n    function logBytes19(bytes19 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n    }\\n\\n    function logBytes20(bytes20 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n    }\\n\\n    function logBytes21(bytes21 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n    }\\n\\n    function logBytes22(bytes22 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n    }\\n\\n    function logBytes23(bytes23 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n    }\\n\\n    function logBytes24(bytes24 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n    }\\n\\n    function logBytes25(bytes25 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n    }\\n\\n    function logBytes26(bytes26 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n    }\\n\\n    function logBytes27(bytes27 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n    }\\n\\n    function logBytes28(bytes28 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n    }\\n\\n    function logBytes29(bytes29 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n    }\\n\\n    function logBytes30(bytes30 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n    }\\n\\n    function logBytes31(bytes31 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n    }\\n\\n    function logBytes32(bytes32 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n    }\\n\\n    function log(uint256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n    }\\n\\n    function log(string memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n    }\\n\\n    function log(bool p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n    }\\n\\n    function log(address p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n    }\\n\\n    function log(uint256 p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608034620000f057601f620042bb38819003918201601f19168301916001600160401b03831184841017620000f55780849260a094604052833981010312620000f05780516001600160a01b03811690819003620000f057620000d882620000d1620000726020620000df96016200010b565b620000ca62000084604085016200010b565b91620000a1608062000099606088016200010b565b96016200010b565b6000805460ff191690556001600255600580546001600160a01b03191690981790975562000120565b50620001a1565b5062000244565b50620002e2565b50604051613f1a9081620003818239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000f057565b6001600160a01b031660008181527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205490919060ff166200019d5781805260016020526040822081835260205260408220600160ff1982541617905533916000805160206200429b8339815191528180a4600190565b5090565b6001600160a01b031660008181527fab0abe0ac784c8cb7ff2dde6fca8a20d1ab21f792e5ef34b43f146db4890393c60205260408120549091907fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc19060ff166200023f5780835260016020526040832082845260205260408320600160ff198254161790556000805160206200429b833981519152339380a4600190565b505090565b6001600160a01b031660008181527fb9cbbae02fe941283ec0eefd7b121e3bc7f89fae077b27bdd75a7fd4cf1543a860205260408120549091907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff166200023f5780835260016020526040832082845260205260408320600160ff198254161790556000805160206200429b833981519152339380a4600190565b6001600160a01b031660008181527fa664834666e14c77a711dc0a124ad5de41c6cfa9ea0370153406653f1ce1111d60205260408120549091907f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc99060ff166200023f5780835260016020526040832082845260205260408320600160ff198254161790556000805160206200429b833981519152339380a460019056fe60a0806040526004361015610060575b50361561001b57600080fd5b60405162461bcd60e51b815260206004820152601a60248201527f455448207472616e7366657273206e6f742061636365707465640000000000006044820152606490fd5b600090813560e01c90816301ffc9a7146133f7575080630c87dd3b146133c15780630f717a631461330b578063107046bd1461318c5780631124acf414613089578063155dd5ee14612ee7578063248a9ca314612ebb57806329dd059b14612d9c5780632a661dac14612c2b5780632e4efe9514612a2c5780632f2ff15d146129ee578063346ab5f21461290757806336568abe146128bf57806336fbad26146128a15780633c1ab00f1461285f5780633f4ba83a146127f657806343580ea71461265e5780635a18cd93146126315780635c975abb1461260f5780635ebc4106146124fb57806378065f27146124d257806378e9f080146123055780637f11dfdf146122a15780638456cb591461224857806387f3d223146120fa5780638898303314611f035780638c59091714611c5e5780638f61f4f514611c2357806391d1485414611bd75780639ee987b2146119b2578063a217fddf14611996578063c14e56561461194f578063d547741f1461190d578063d5842c8b14611726578063d5b8c0cd146116eb578063d9394d8314611633578063dcd1a3cc14610d25578063e63ab1e914610cea578063e6e5656c14610793578063e9b7fed414610746578063f96b61cf1461071d5763fdd3df860361000f573461071a57610245366137ef565b81835260036020526040832061026160ff600783015416613b25565b61027060048201544211613bda565b60098101546001600160a01b03169161028a338414613c26565b61029b60ff60108401541615613c80565b600682015491600281015493848410156102e4575b5050506020907ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab4506926040519110158152a280f35b85879592949395526003602052600860408820019081549061030582613ad2565b9161031360405193846134a2565b808352601f19938461032483613ad2565b0136602086013761033482613ad2565b9461034260405196876134a2565b82865261034e83613ad2565b013660208701378a5b8281106106a95750505060018060a01b03600754169160405197888b895461037e8161344c565b90600181169081156106855750600114610645575b506103b8918167205469636b65747360c01b600893520360171981018c52018a6134a2565b6040519867464c4958544b542360c01b60208b01528a60288b015260288a528960608101106001600160401b0360608c01111761062f578a91959493926104766104658c61043561048795600a8f6060850160405201549763941a0a8b60e01b6060850152606484015261016060848401526101c4830190613569565b9960c461044f6063199c8d8582030160a486015284613569565b9201528d81038a0160e48f0152600b8d01613ccc565b8c810389016101048e01528b613ccc565b90878c8303016101248d01526135a9565b94898603016101448a0152602080855196878152019401948b5b81811061061957505061016489018690526101848901526101a4880152602092506060870191879003605f19019082908a905af180156105be5786906105c9575b600c840180546001600160a01b0319166001600160a01b039283161790556005805490850154600686015460405163a9059cbb60e01b8152918416600483015260248201529550602091869116818981604481015b03925af19283156105be577ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab450694602094610591575b506010600160ff198060078501541660078501558284015416179101559281926102b0565b6105b090853d87116105b7575b6105a881836134a2565b810190613b69565b503861056c565b503d61059e565b6040513d88823e3d90fd5b50926020813d602011610611575b816105e7602093606084016134a2565b8101031261060d5760600151926001600160a01b038416840361060d57610537936104e2565b8580fd5b3d91506105d7565b86518652602096870196909501946001016104a1565b634e487b7160e01b600052604160045260246000fd5b915050888c528960208d208d905b83821061066c57509091820160200190506103b8610393565b8082936020809460019454920101520191018b91610653565b60ff1916602085810191909152821515909202840190910191506103b89050610393565b806106b76107159284613b8e565b905460039190911b1c6001600160a01b03166106d38288613d62565b528b8d52600660205260408d206106ea8285613b8e565b60018060a01b0391549060031b1c1660005260205260406000205461070f8289613d62565b52613b00565b610357565b80fd5b503461071a578060031936011261071a576007546040516001600160a01b039091168152602090f35b503461071a57604036600319011261071a5760406107626137ad565b9160043581526006602052209060018060a01b03166000526020526040806000205481519080151582526020820152f35b503461071a5761012036600319011261071a57600435906001600160401b03602435818111610ce6576107ca903690600401613757565b90604435818111610ce2576107e3903690600401613757565b906107ec6137d9565b9160e43582811161060d57610805903690600401613757565b9161010435818111610cde5761081f903690600401613757565b9661082d6004548210613d76565b865260209160038352604087209760018060a01b03968760098b0154163303610c8f57805190848211610a9b5790808a93928c61086a815461344c565b89601f97888311610c63575b92505050508790858311600114610c00578c92610bf5575b50508160011b916000199060031b1c1916178a555b825192848411610a9b5760019380858d01928c6108c0855461344c565b8a888211610bc9575b5050508890868311600114610b66578d92610b5b575b5050600019600383901b1c191690851b1790555b60643560028b015560038a0195608435875560048b019a60a4358c55896005820199166001600160601b0360a01b8a5416178955600b81018251878111610b47578c61093f835461344c565b8a888211610b1b575b505050888d878311600114610aba5790600f9583610aaf575b5050600019600383901b1c191690871b1790555b01948151948511610a9b5761098a865461344c565b838111610a65575b50809285116001146109f457509280899a959381936109dd98966109e69c946109e9575b50501b916000199060031b1c19161790555b54906109d6428310156139da565b5411613a25565b54161515613a7b565b80f35b0151925038806109b6565b9190601f949394198416868b52838b20938b905b828210610a4e575050916109dd97959391856109e69c9d98969410610a35575b505050811b0190556109c8565b015160001960f88460031b161c19169055388080610a28565b808886978294978701518155019601940190610a08565b610a8c90878c52828c208580890160051c820192858a10610a92575b0160051c0190613ae9565b38610992565b92508192610a81565b634e487b7160e01b8a52604160045260248afd5b015190503880610961565b889291601f1983168583528c8320925b8d828210610b055750509683600f9810610aec575b505050811b019055610975565b015160001960f88460031b161c19169055388080610adf565b838a015185558c96909401939283019201610aca565b8285610b3f9452208880850160051c8201928d8610610a92570160051c0190613ae9565b8c388a610948565b634e487b7160e01b8d52604160045260248dfd5b0151905038806108df565b848e52898e2088945091908e5b8b601f1986168210610bb357505083601f19811610610b9a575b505050811b0190556108f3565b015160001960f88460031b161c19169055388080610b8d565b8284015185558a96909401939283019201610b73565b8287610bed9452208880860160051c8201928d8710610a92570160051c0190613ae9565b8c388a6108c9565b01519050388061088e565b8d8d52888d209250601f1984168d5b8a828210610c4d575050908460019594939210610c34575b505050811b018a556108a3565b015160001960f88460031b161c19169055388080610c27565b6001859682939686015181550195019301610c0f565b610c86938152208780860160051c8201928c8710610a92570160051c0190613ae9565b8c38898e610876565b60405162461bcd60e51b815260048101869052602160248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e206564696044820152601d60fa1b6064820152608490fd5b8680fd5b8380fd5b8280fd5b503461071a578060031936011261071a5760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b503461071a5761014036600319011261071a576004356001600160401b03811161162f57610d57903690600401613757565b6024356001600160401b038111610ce657610d76903690600401613757565b9060a4356001600160a01b038116810361162a57610d926137d9565b92610104356001600160401b03811161060d57610db3903690600401613757565b90610124356001600160401b038111610cde57610dd4903690600401613757565b610ddc613861565b610dea4260643510156139da565b610df960643560843511613a25565b610e0d6001600160a01b0385161515613a7b565b605a60e435116115d3576007546001600160a01b03161561158e57600454956040518060208101106001600160401b0360208301111761062f576020810160405288815260405193610e5e85613486565b878552602085015260443560408501526064356060850152608435608085015260018060a01b03861660a08501528860c0850152600160e085015261010084015260018060a01b031661012083015260e4356101408301528261016083015286610180830152856101a0830152866101c08301526101e0820152856102008201528561022082015284865260036020526040862081518051906001600160401b038211611342578190610f11845461344c565b601f811161155e575b50602090601f83116001146114f5578a926114ea575b50508160011b916000199060031b1c19161781555b60208201518051906001600160401b038211611342578190610f6a600185015461344c565b601f81116114b7575b50602090601f8311600114611448578a9261143d575b50508160011b916000199060031b1c19161760018201555b6040820151600282015560608201516003820155608082015160048201556005810160018060a01b0360a0840151166001600160601b0360a01b82541617905560c0820151600682015561100a60e08301511515600783019060ff801983541691151516179055565b6101008201518051906001600160401b03821161134257600160401b8211611342576020906008840154836008860155808410611420575b500160088301895260208920895b83811061140357505050506009810160018060a01b03610120840151166001600160601b0360a01b825416179055610140820151600a8201556101608201518051906001600160401b0382116113425781906110af600b85015461344c565b601f81116113d0575b50602090601f8311600114611361578a92611356575b50508160011b916000199060031b1c191617600b8201555b600c810160018060a01b03610180840151166001600160601b0360a01b8254161790556101a0820151600d8201556101c0820151600e8201556101e08201518051906001600160401b03821161134257611143600f84015461344c565b601f8111611304575b5060209089601f841160011461126257601061120e9895857f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9b99966111ea966112519a966102209692611257575b50508160011b916000199060031b1c191617600f8201555b01916111d26102008201511515849060ff801983541691151516179055565b0151815461ff00191690151560081b61ff0016179055565b6111f5600454613b00565b6004556040519485946101008652610100860190613569565b6044356020860152606435604086015260843560608601526001600160a01b0390921660808501523360a085015260e43560c085015283820360e0850152613569565b0390a280f35b01519050388061119b565b5090600f84018a5260208a20918a5b601f19851681106112ec5750601061120e98956001866111ea966112519a96610220967f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9f9d9a601f198116106112d3575b505050811b01600f8201556111b3565b015160001960f88460031b161c191690553880806112c3565b91926020600181928685015181550194019201611271565b61133290600f85018b5260208b20601f850160051c81019160208610611338575b601f0160051c0190613ae9565b3861114c565b9091508190611325565b634e487b7160e01b89526041600452602489fd5b0151905038806110ce565b9250600b84018a5260208a20908a935b601f19841685106113b5576001945083601f1981161061139c575b505050811b01600b8201556110e6565b015160001960f88460031b161c1916905538808061138c565b81810151835560209485019460019093019290910190611371565b6113fd90600b86018c5260208c20601f850160051c8101916020861061133857601f0160051c0190613ae9565b386110b8565b82516001600160a01b031681830155602090920191600101611050565b600885018b52828b20611437918101908501613ae9565b38611042565b015190503880610f89565b9250600184018a5260208a20908a935b601f198416851061149c576001945083601f19811610611483575b505050811b016001820155610fa1565b015160001960f88460031b161c19169055388080611473565b81810151835560209485019460019093019290910190611458565b6114e490600186018c5260208c20601f850160051c8101916020861061133857601f0160051c0190613ae9565b38610f73565b015190503880610f30565b9250838a5260208a20908a935b601f1984168510611543576001945083601f1981161061152a575b505050811b018155610f45565b015160001960f88460031b161c1916905538808061151d565b81810151835560209485019460019093019290910190611502565b61158890858c5260208c20601f850160051c8101916020861061133857601f0160051c0190613ae9565b38610f1a565b60405162461bcd60e51b815260206004820152601d60248201527f5469636b65744d616e61676572206e6f7420696e697469616c697a65640000006044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f50726f6669742073686172652070657263656e746167652063616e6e6f74206560448201526878636565642039302560b81b6064820152608490fd5b600080fd5b5080fd5b503461071a57602036600319011261071a57600435611650613805565b61165d6004548210613d76565b808252600360205260076040832001805460ff81166116a65760ff191660011790557ff87e623aca5b8bef3f4a5f8a900ecd4c0367b153c2d476a78b65a68661ba7a258280a280f35b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920616374697665000000000000006044820152606490fd5b503461071a578060031936011261071a5760206040517f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc98152f35b503461071a5760208060031936011261162f576117416137c3565b6004546001600160a01b03939092918416919080805b8581106118d2575061176890613e3c565b948192825b86811061178657604051806117828a826136f5565b0390f35b808452600380835260408520846009820154168881146117b2575b5050506117ad90613b00565b61176d565b916117ad9397916118c993604051926117ca84613486565b6117d3836134c3565b84526117e1600184016134c3565b88850152600283015460408501528201546060840152600482015460808401528760058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611838848301613e8c565b610100870152610120860152600a81015461014086015261185b600b82016134c3565b61016086015289600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611890600f82016134c3565b6101e086015201549082821615156102008501521c1615156102208201526118b8828c613d62565b526118c3818b613d62565b50613b00565b949038806117a1565b808352600384528487600960408620015416146118f8575b6118f390613b00565b611757565b906119056118f391613b00565b9190506118ea565b503461071a57604036600319011261071a5761194b60043561192d6137ad565b90808452600160205261194660016040862001546138bd565b613963565b5080f35b503461071a57604036600319011261071a57604061196b6137ad565b9160043581526006602052209060018060a01b03166000526020526020604060002054604051908152f35b503461071a578060031936011261071a57602090604051908152f35b503461071a576020908160031936011261071a57600435808252600390818452604083209260078401906119e960ff835416613b25565b6119f860048601544211613bda565b60098501546001600160a01b039490611a149086163314613c26565b6010860192611a2760ff85541615613c80565b6006938488015460028901541115611b6c57909660080190835b8254811015611b565787611a558285613b8e565b905490861b1c16878652868b5260408620816000528b52604060002054611a86575b50611a8190613b00565b611a41565b878652868b5260408087206000838152908d52818120548a8952898e528289208483528e5290829020889055600554915163a9059cbb60e01b81526001600160a01b03841660048201526024810182905290918d9082908d16818b816044810103925af18015611b4b578d611a819594938c937fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237293611b2e575b50604051908152a390611a77565b611b4490833d85116105b7576105a881836134a2565b5038611b20565b6040513d8a823e3d90fd5b885460ff199081168a5582541660011782558480f35b60405162461bcd60e51b8152600481018a9052603b60248201527f5468652070726f6a656374206861732072656163686564207468652066756e6460448201527f696e6720476f616c20736f6d657468696e672069732077726f6e6700000000006064820152608490fd5b503461071a57604036600319011261071a576040611bf36137ad565b9160043581526001602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461071a578060031936011261071a5760206040517fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc18152f35b503461071a57611c6d366137ef565b90611c76613bbc565b80835260206003815260408420611c9360ff600783015416613b25565b60038101544210611ebe5760048101544211611e85578315611e40578460018060a01b03918383600554166064604051809581936323b872dd60e01b83523360048401523060248401528b60448401525af1918215611e3557600892611e18575b5060068101611d04878254613b81565b905584875260068452604087203360005284526040600020611d27878254613b81565b90550180549081158015611dda575b611d6c575b5050507fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b39906040519384523393a380f35b600160401b821015611dc65781611dab9160017fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b39969594018155613b8e565b819291549060031b9133831b921b1916179055903880611d3b565b634e487b7160e01b87526041600452602487fd5b506000198201828111611e0457611df2849183613b8e565b905460039190911b1c16331415611d36565b634e487b7160e01b88526011600452602488fd5b611e2e90853d87116105b7576105a881836134a2565b5038611cf4565b6040513d89823e3d90fd5b60405162461bcd60e51b815260048101839052601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60405162461bcd60e51b8152600481018390526011602482015270141c9bda9958dd081a185cc8195b991959607a1b6044820152606490fd5b60405162461bcd60e51b815260048101839052601b60248201527f50726f6a65637420686173206e6f7420737461727465642079657400000000006044820152606490fd5b503461071a578060031936011261071a5760045481805b8281106120a85750611f2b90613e3c565b9180815b838110611f44576040518061178287826136f5565b808352600360209080825260408520908101548042108061209a575b611f76575b505050611f7190613b00565b611f2f565b91611f719394916120919360405192611f8e84613486565b611f97836134c3565b8452611fa5600184016134c3565b908401526002820154604084015260608301526004810154608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892612000848301613e8c565b61010087015280600983015416610120870152600a82015461014087015261202a600b83016134c3565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c086015261205e600f82016134c3565b6101e086015201549082821615156102008501521c1615156102208201526120868289613d62565b526118c38188613d62565b91903880611f65565b5060ff600783015416611f60565b8084526003806020526040852090810154421090816120eb575b506120d6575b6120d190613b00565b611f1a565b906120e36120d191613b00565b9190506120c8565b60ff91506007015416386120c2565b503461071a57602036600319011261071a5760406117829160043561211d613db7565b5061212b6004548210613d76565b815260036020522060ff60106040519261214484613486565b61214d816134c3565b845261215b600182016134c3565b602085015260028101546040850152600381015460608501526004810154608085015260058101546001600160a01b0390811660a0860152600682015460c086015260078201548416151560e08601526121b760088301613e8c565b61010086015280600983015416610120860152600a8201546101408601526121e1600b83016134c3565b610160860152600c82015416610180850152600d8101546101a0850152600e8101546101c0850152612215600f82016134c3565b6101e08501520154818116151561020084015260081c1615156102208201526040519182916020835260208301906135e6565b503461071a578060031936011261071a57612261613805565b612269613bbc565b600160ff198254161781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503461071a5760207f0d2b0de855a382608a438ffcbbe1803df7a3ed01f7f5624d816e5b378d190a586122d3366137ef565b6122de939193613861565b6122eb6004548510613d76565b8385526003825280600e604087200155604051908152a280f35b503461071a578060031936011261071a5760045481805b828110612497575061232d90613e3c565b9180805b838110612346576040518061178287826136f5565b80825260036020908082526040842060108101549060ff92838316908161237c575b50505050505061237790613b00565b612331565b9161248b959391612377979995936040519561239787613486565b6123a0846134c3565b87526123ae600185016134c3565b908701526002830154604087015282015460608601526004820154608086015260058201546001600160a01b0390811660a0870152600683015460c087015260078301548516151560e087015260089261246991600f9190612411868301613e8c565b6101008a0152806009830154166101208a0152600a8201546101408a015261243b600b83016134c3565b6101608a0152600c82015416610180890152600d8101546101a0890152600e8101546101c0890152016134c3565b6101e086015215156102008501521c1615156102208201526120868289613d62565b92903880808080612368565b808452600360205260ff6010604086200154166124bd575b6124b890613b00565b61231c565b906124ca6124b891613b00565b9190506124af565b503461071a578060031936011261071a576005546040516001600160a01b039091168152602090f35b503461071a57602036600319011261071a576125156137c3565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff16156125f0576007546001600160a01b0391908281166125a1576001600160a01b03191691169081176007556040519081527f347aa47069ceafe11306c3ddc5ac3c7428ffdc41b25817490247db1f5e636ce690602090a180f35b60405162461bcd60e51b815260206004820152602160248201527f5469636b65744d616e6167657220616c726561647920696e697469616c697a656044820152601960fa1b6064820152608490fd5b60405163e2517d3f60e01b815233600482015260006024820152604490fd5b503461071a578060031936011261071a5760ff60209154166040519015158152f35b503461071a57602036600319011261071a5760066040602092600435815260038452200154604051908152f35b503461071a57604036600319011261071a576004356001600160401b03602435818111610ce257612693903690600401613757565b82845260036020526040842060098101546001600160a01b039291908316330361279a576010015460ff161561273e57849160075416803b15610ce6576126fe94836040518097819582946343580ea760e01b84526004840152604060248401526044830190613569565b03925af1801561273357612710578280f35b811161271f5760405238808280f35b634e487b7160e01b82526041600452602482fd5b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152602e60248201527f50726f6a656374206d7573742062652066696e616c697a656420746f2073657460448201526d081d1a19481d9a59195bc815549360921b6064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e2073657460448201526d081d1a19481d9a59195bc815549360921b6064820152608490fd5b503461071a578060031936011261071a5761280f613805565b805460ff81161561284d5760ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b503461071a57602036600319011261071a5761288d6008604061178293600435815260036020522001613e8c565b6040519182916020835260208301906135a9565b503461071a578060031936011261071a576020600454604051908152f35b503461071a57604036600319011261071a576128d96137ad565b336001600160a01b038216036128f55761194b90600435613963565b60405163334bd91960e11b8152600490fd5b503461071a57604036600319011261071a5760043560243580151590818103610ce2577f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc980855260016020526040852033865260205260ff604086205416156129d057507fc99334413c7a541e7e874b3e4d302828e85dd94168e081e7b4c89cbf5decb474916129c66020926129a06004548710613d76565b85875260038452601060408820019061ff00825491151560081b169061ff001916179055565b604051908152a280f35b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b503461071a57604036600319011261071a5761194b600435612a0e6137ad565b908084526001602052612a2760016040862001546138bd565b6138e3565b503461071a5760208060031936011261162f576004356001600160401b038111610ce657612a5e903690600401613757565b6004549181810184805b858110612bd85750612a7990613e3c565b948092815b868110612a9357604051806117828a826136f5565b8083526003808352600b612ab5612abc82604088200160405192838092613ccc565b03826134a2565b8481519101208851872014612adc575b5050612ad790613b00565b612a7e565b95612bd0918397612ad7948752818652604087209060405192612afe84613486565b612b07836134c3565b8452612b15600184016134c3565b8885015260028301546040850152820154606084015260048201546080840152601060018060a01b03928360058201541660a0860152600681015460c086015260ff9384600783015416151560e0870152612b9c600894612b77868501613e8c565b61010089015282600985015416610120890152600a84015461014089015283016134c3565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611890600f82016134c3565b949038612acc565b80875260038452612ab5612bf8600b60408a200160405192838092613ccc565b8481519101208551842014612c16575b612c1190613b00565b612a68565b90612c23612c1191613b00565b919050612c08565b503461071a578060031936011261071a5760045481805b828110612d465750612c5390613e3c565b9180805b838110612c6c576040518061178287826136f5565b8082526003602090808252604084209060048201549081421180612d35575b612ca2575b50505050612c9d90613b00565b612c57565b91612d2b9391612c9d95979360405193612cbb85613486565b612cc4846134c3565b8552612cd2600185016134c3565b90850152600283015460408501528201546060840152608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892612000848301613e8c565b9290388080612c90565b506006830154600284015411612c8b565b808452600360205260408420600481015442119081612d89575b50612d74575b612d6f90613b00565b612c42565b90612d81612d6f91613b00565b919050612d66565b9050600260068201549101541138612d60565b503461071a578060031936011261071a5760045481805b828110612e535750612dc490613e3c565b9180815b838110612ddd576040518061178287826136f5565b808352600360209080825260408520908101548042101580612e45575b80612e37575b612e16575b505050612e1190613b00565b612dc8565b91612e11939491612e2e9360405192611f8e84613486565b91903880612e05565b5060ff600783015416612e00565b506004820154421115612dfa565b80845260038060205260408520908101544210159081612eac575b81612e9d575b50612e88575b612e8390613b00565b612db3565b90612e95612e8391613b00565b919050612e7a565b60ff9150600701541638612e74565b60048101544211159150612e6e565b503461071a57602036600319011261071a57600160406020926004358152828452200154604051908152f35b503461071a5760208060031936011261162f5760043580835260038252604083206006835260408420338552835260408420541561304d576003810154421090811561303f575b5015612ffa578083526006808352604080852033808752908552818620548487529285528186208187528552818620869055600554915163a9059cbb60e01b815260048101919091526024810183905291939081908390604490829089906001600160a01b03165af1918215612fef577fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237292612fd2575b506040519384523393a380f35b612fe890823d84116105b7576105a881836134a2565b5038612fc5565b6040513d87823e3d90fd5b60405162461bcd60e51b815260048101839052601760248201527f50726f6a656374206973207374696c6c206163746976650000000000000000006044820152606490fd5b600491500154421138612f2e565b60405162461bcd60e51b81526004810184905260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b503461071a578060031936011261071a5760045481805b82811061313557506130b190613e3c565b9180805b8381106130ca576040518061178287826136f5565b8082526003602090808252604084209060048201549081421180613123575b613100575b505050506130fb90613b00565b6130b5565b9161311993916130fb95979360405193612cbb85613486565b92903880806130ee565b506006830154600284015411156130e9565b808452600360205260408420600481015442119081613178575b50613163575b61315e90613b00565b6130a0565b9061317061315e91613b00565b919050613155565b90506002600682015491015411153861314f565b503461071a57602036600319011261071a5760043581526003602052604090206131b5816134c3565b906131c2600182016134c3565b81600281015491600382015492600483015490600160a01b6001900391826005860154166006860154600787015460ff16908560098901541692600a89015494600b8a0161320f906134c3565b97600c8b0154169a600d8b015499600e8c01549b600f0161322f906134c3565b9d601001549e604051806080526102208091526080510161324f91613569565b608051808203906020015261326391613569565b9760805160400152608051606001526080516080015260805160a0015260805160c00152151560805160e00152608051610100015260805161012001526080518082039061014001526132b591613569565b92608051610160015260805161018001526080516101a00152608051808203906101c001526132e391613569565b9060ff811615156080516101e0015260081c60ff161515608051610200015260805180910390f35b503461071a57602036600319011261071a57600435613328613805565b6133356004548210613d76565b808252600360205260076040832001805460ff81161561337c5760ff191690557f9f505f325627bdd7f5a6dd8bcceecdc48a989f647561427d61d35b7a50703f798280a280f35b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920706175736564000000000000006044820152606490fd5b503461071a57602036600319011261071a57602090600435815260038252600c604060018060a01b039220015416604051908152f35b90503461162f57602036600319011261162f5760043563ffffffff60e01b8116809103610ce65760209250637965db0b60e01b811490811561343b575b5015158152f35b6301ffc9a760e01b14905038613434565b90600182811c9216801561347c575b602083101461346657565b634e487b7160e01b600052602260045260246000fd5b91607f169161345b565b61024081019081106001600160401b0382111761062f57604052565b90601f801991011681019081106001600160401b0382111761062f57604052565b90604051918260008254926134d78461344c565b9081845260019485811690816000146135465750600114613503575b5050613501925003836134a2565b565b9093915060005260209081600020936000915b81831061352e575050613501935082010138806134f3565b85548884018501529485019487945091830191613516565b91505061350194506020925060ff191682840152151560051b82010138806134f3565b919082519283825260005b848110613595575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201613574565b90815180825260208080930193019160005b8281106135c9575050505090565b83516001600160a01b0316855293810193928101926001016135bb565b906136d86136126136008451610240808652850190613569565b60208501518482036020860152613569565b6040840151604084015260608401516060840152608084015160808401526136a061367460018060a01b03928360a08801511660a087015260c087015160c087015260e0870151151560e08701526101008088015190878303908801526135a9565b610120838188015116908601526101408087015190860152610160808701519086830390870152613569565b90610180908186015116908401526101a080850151908401526101c080850151908401526101e0808501519084830390850152613569565b916102008082015115159083015261022080910151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106137295750505050505090565b9091929394958480613747600193603f198682030187528a516135e6565b9801930193019194939290613719565b81601f8201121561162a578035906001600160401b03821161062f576040519261378b601f8401601f1916602001856134a2565b8284526020838301011161162a57816000926020809301838601378301015290565b602435906001600160a01b038216820361162a57565b600435906001600160a01b038216820361162a57565b60c435906001600160a01b038216820361162a57565b604090600319011261162a576004359060243590565b3360009081527fb9cbbae02fe941283ec0eefd7b121e3bc7f89fae077b27bdd75a7fd4cf1543a860205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16156129d05750565b3360009081527fab0abe0ac784c8cb7ff2dde6fca8a20d1ab21f792e5ef34b43f146db4890393c60205260409020547fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc19060ff16156129d05750565b80600052600160205260406000203360005260205260ff60406000205416156129d05750565b906000918083526001602052604083209160018060a01b03169182845260205260ff6040842054161560001461395e5780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526001602052604083209160018060a01b03169182845260205260ff60408420541660001461395e578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b156139e157565b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152fd5b15613a2c57565b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b15613a8257565b60405162461bcd60e51b815260206004820152602260248201527f5465616d2077616c6c65742063616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608490fd5b6001600160401b03811161062f5760051b60200190565b818110613af4575050565b60008155600101613ae9565b6000198114613b0f5760010190565b634e487b7160e01b600052601160045260246000fd5b15613b2c57565b60405162461bcd60e51b815260206004820152601560248201527450726f6a656374206973206e6f742061637469766560581b6044820152606490fd5b9081602091031261162a5751801515810361162a5790565b91908201809211613b0f57565b8054821015613ba65760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60ff60005416613bc857565b60405163d93c066560e01b8152600490fd5b15613be157565b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420686173206e6f7420656e64656420796574000000000000006044820152606490fd5b15613c2d57565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e2066696e604482015264616c697a6560d81b6064820152608490fd5b15613c8757565b60405162461bcd60e51b815260206004820152601c60248201527f50726f6a65637420697320616c72656164792066696e616c697a6564000000006044820152606490fd5b9060009291805491613cdd8361344c565b918282526001938481169081600014613d3f5750600114613cff575b50505050565b90919394506000526020928360002092846000945b838610613d2b575050505001019038808080613cf9565b805485870183015294019385908201613d14565b9294505050602093945060ff191683830152151560051b01019038808080613cf9565b8051821015613ba65760209160051b010190565b15613d7d57565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bda9958dd08125160721b6044820152606490fd5b60405190613dc482613486565b8161022060609182815282602082015260009283604083015283818301528360808301528360a08301528360c08301528360e08301528061010083015283610120830152836101408301528061016083015283610180830152836101a0830152836101c08301526101e0820152826102008201520152565b90613e4682613ad2565b613e5360405191826134a2565b8281528092613e64601f1991613ad2565b019060005b828110613e7557505050565b602090613e80613db7565b82828501015201613e69565b9060405191828154918282526020928383019160005283600020936000905b828210613ec157505050613501925003836134a2565b85546001600160a01b031684526001958601958895509381019390910190613eab56fea2646970667358221220c6401cc0edf0e65909c698228363ff41bcf06e6708df59cd1174b17d26819c2664736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
  "deployedBytecode": "0x60a0806040526004361015610060575b50361561001b57600080fd5b60405162461bcd60e51b815260206004820152601a60248201527f455448207472616e7366657273206e6f742061636365707465640000000000006044820152606490fd5b600090813560e01c90816301ffc9a7146133f7575080630c87dd3b146133c15780630f717a631461330b578063107046bd1461318c5780631124acf414613089578063155dd5ee14612ee7578063248a9ca314612ebb57806329dd059b14612d9c5780632a661dac14612c2b5780632e4efe9514612a2c5780632f2ff15d146129ee578063346ab5f21461290757806336568abe146128bf57806336fbad26146128a15780633c1ab00f1461285f5780633f4ba83a146127f657806343580ea71461265e5780635a18cd93146126315780635c975abb1461260f5780635ebc4106146124fb57806378065f27146124d257806378e9f080146123055780637f11dfdf146122a15780638456cb591461224857806387f3d223146120fa5780638898303314611f035780638c59091714611c5e5780638f61f4f514611c2357806391d1485414611bd75780639ee987b2146119b2578063a217fddf14611996578063c14e56561461194f578063d547741f1461190d578063d5842c8b14611726578063d5b8c0cd146116eb578063d9394d8314611633578063dcd1a3cc14610d25578063e63ab1e914610cea578063e6e5656c14610793578063e9b7fed414610746578063f96b61cf1461071d5763fdd3df860361000f573461071a57610245366137ef565b81835260036020526040832061026160ff600783015416613b25565b61027060048201544211613bda565b60098101546001600160a01b03169161028a338414613c26565b61029b60ff60108401541615613c80565b600682015491600281015493848410156102e4575b5050506020907ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab4506926040519110158152a280f35b85879592949395526003602052600860408820019081549061030582613ad2565b9161031360405193846134a2565b808352601f19938461032483613ad2565b0136602086013761033482613ad2565b9461034260405196876134a2565b82865261034e83613ad2565b013660208701378a5b8281106106a95750505060018060a01b03600754169160405197888b895461037e8161344c565b90600181169081156106855750600114610645575b506103b8918167205469636b65747360c01b600893520360171981018c52018a6134a2565b6040519867464c4958544b542360c01b60208b01528a60288b015260288a528960608101106001600160401b0360608c01111761062f578a91959493926104766104658c61043561048795600a8f6060850160405201549763941a0a8b60e01b6060850152606484015261016060848401526101c4830190613569565b9960c461044f6063199c8d8582030160a486015284613569565b9201528d81038a0160e48f0152600b8d01613ccc565b8c810389016101048e01528b613ccc565b90878c8303016101248d01526135a9565b94898603016101448a0152602080855196878152019401948b5b81811061061957505061016489018690526101848901526101a4880152602092506060870191879003605f19019082908a905af180156105be5786906105c9575b600c840180546001600160a01b0319166001600160a01b039283161790556005805490850154600686015460405163a9059cbb60e01b8152918416600483015260248201529550602091869116818981604481015b03925af19283156105be577ff41ceb4b589a15c81895351360c60f19679907fa4852557cbeb5559605ab450694602094610591575b506010600160ff198060078501541660078501558284015416179101559281926102b0565b6105b090853d87116105b7575b6105a881836134a2565b810190613b69565b503861056c565b503d61059e565b6040513d88823e3d90fd5b50926020813d602011610611575b816105e7602093606084016134a2565b8101031261060d5760600151926001600160a01b038416840361060d57610537936104e2565b8580fd5b3d91506105d7565b86518652602096870196909501946001016104a1565b634e487b7160e01b600052604160045260246000fd5b915050888c528960208d208d905b83821061066c57509091820160200190506103b8610393565b8082936020809460019454920101520191018b91610653565b60ff1916602085810191909152821515909202840190910191506103b89050610393565b806106b76107159284613b8e565b905460039190911b1c6001600160a01b03166106d38288613d62565b528b8d52600660205260408d206106ea8285613b8e565b60018060a01b0391549060031b1c1660005260205260406000205461070f8289613d62565b52613b00565b610357565b80fd5b503461071a578060031936011261071a576007546040516001600160a01b039091168152602090f35b503461071a57604036600319011261071a5760406107626137ad565b9160043581526006602052209060018060a01b03166000526020526040806000205481519080151582526020820152f35b503461071a5761012036600319011261071a57600435906001600160401b03602435818111610ce6576107ca903690600401613757565b90604435818111610ce2576107e3903690600401613757565b906107ec6137d9565b9160e43582811161060d57610805903690600401613757565b9161010435818111610cde5761081f903690600401613757565b9661082d6004548210613d76565b865260209160038352604087209760018060a01b03968760098b0154163303610c8f57805190848211610a9b5790808a93928c61086a815461344c565b89601f97888311610c63575b92505050508790858311600114610c00578c92610bf5575b50508160011b916000199060031b1c1916178a555b825192848411610a9b5760019380858d01928c6108c0855461344c565b8a888211610bc9575b5050508890868311600114610b66578d92610b5b575b5050600019600383901b1c191690851b1790555b60643560028b015560038a0195608435875560048b019a60a4358c55896005820199166001600160601b0360a01b8a5416178955600b81018251878111610b47578c61093f835461344c565b8a888211610b1b575b505050888d878311600114610aba5790600f9583610aaf575b5050600019600383901b1c191690871b1790555b01948151948511610a9b5761098a865461344c565b838111610a65575b50809285116001146109f457509280899a959381936109dd98966109e69c946109e9575b50501b916000199060031b1c19161790555b54906109d6428310156139da565b5411613a25565b54161515613a7b565b80f35b0151925038806109b6565b9190601f949394198416868b52838b20938b905b828210610a4e575050916109dd97959391856109e69c9d98969410610a35575b505050811b0190556109c8565b015160001960f88460031b161c19169055388080610a28565b808886978294978701518155019601940190610a08565b610a8c90878c52828c208580890160051c820192858a10610a92575b0160051c0190613ae9565b38610992565b92508192610a81565b634e487b7160e01b8a52604160045260248afd5b015190503880610961565b889291601f1983168583528c8320925b8d828210610b055750509683600f9810610aec575b505050811b019055610975565b015160001960f88460031b161c19169055388080610adf565b838a015185558c96909401939283019201610aca565b8285610b3f9452208880850160051c8201928d8610610a92570160051c0190613ae9565b8c388a610948565b634e487b7160e01b8d52604160045260248dfd5b0151905038806108df565b848e52898e2088945091908e5b8b601f1986168210610bb357505083601f19811610610b9a575b505050811b0190556108f3565b015160001960f88460031b161c19169055388080610b8d565b8284015185558a96909401939283019201610b73565b8287610bed9452208880860160051c8201928d8710610a92570160051c0190613ae9565b8c388a6108c9565b01519050388061088e565b8d8d52888d209250601f1984168d5b8a828210610c4d575050908460019594939210610c34575b505050811b018a556108a3565b015160001960f88460031b161c19169055388080610c27565b6001859682939686015181550195019301610c0f565b610c86938152208780860160051c8201928c8710610a92570160051c0190613ae9565b8c38898e610876565b60405162461bcd60e51b815260048101869052602160248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e206564696044820152601d60fa1b6064820152608490fd5b8680fd5b8380fd5b8280fd5b503461071a578060031936011261071a5760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b503461071a5761014036600319011261071a576004356001600160401b03811161162f57610d57903690600401613757565b6024356001600160401b038111610ce657610d76903690600401613757565b9060a4356001600160a01b038116810361162a57610d926137d9565b92610104356001600160401b03811161060d57610db3903690600401613757565b90610124356001600160401b038111610cde57610dd4903690600401613757565b610ddc613861565b610dea4260643510156139da565b610df960643560843511613a25565b610e0d6001600160a01b0385161515613a7b565b605a60e435116115d3576007546001600160a01b03161561158e57600454956040518060208101106001600160401b0360208301111761062f576020810160405288815260405193610e5e85613486565b878552602085015260443560408501526064356060850152608435608085015260018060a01b03861660a08501528860c0850152600160e085015261010084015260018060a01b031661012083015260e4356101408301528261016083015286610180830152856101a0830152866101c08301526101e0820152856102008201528561022082015284865260036020526040862081518051906001600160401b038211611342578190610f11845461344c565b601f811161155e575b50602090601f83116001146114f5578a926114ea575b50508160011b916000199060031b1c19161781555b60208201518051906001600160401b038211611342578190610f6a600185015461344c565b601f81116114b7575b50602090601f8311600114611448578a9261143d575b50508160011b916000199060031b1c19161760018201555b6040820151600282015560608201516003820155608082015160048201556005810160018060a01b0360a0840151166001600160601b0360a01b82541617905560c0820151600682015561100a60e08301511515600783019060ff801983541691151516179055565b6101008201518051906001600160401b03821161134257600160401b8211611342576020906008840154836008860155808410611420575b500160088301895260208920895b83811061140357505050506009810160018060a01b03610120840151166001600160601b0360a01b825416179055610140820151600a8201556101608201518051906001600160401b0382116113425781906110af600b85015461344c565b601f81116113d0575b50602090601f8311600114611361578a92611356575b50508160011b916000199060031b1c191617600b8201555b600c810160018060a01b03610180840151166001600160601b0360a01b8254161790556101a0820151600d8201556101c0820151600e8201556101e08201518051906001600160401b03821161134257611143600f84015461344c565b601f8111611304575b5060209089601f841160011461126257601061120e9895857f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9b99966111ea966112519a966102209692611257575b50508160011b916000199060031b1c191617600f8201555b01916111d26102008201511515849060ff801983541691151516179055565b0151815461ff00191690151560081b61ff0016179055565b6111f5600454613b00565b6004556040519485946101008652610100860190613569565b6044356020860152606435604086015260843560608601526001600160a01b0390921660808501523360a085015260e43560c085015283820360e0850152613569565b0390a280f35b01519050388061119b565b5090600f84018a5260208a20918a5b601f19851681106112ec5750601061120e98956001866111ea966112519a96610220967f43951e685c7b3608f172bc7af661c7088eb739f9ef5ce70b8dee612c87af257e9f9d9a601f198116106112d3575b505050811b01600f8201556111b3565b015160001960f88460031b161c191690553880806112c3565b91926020600181928685015181550194019201611271565b61133290600f85018b5260208b20601f850160051c81019160208610611338575b601f0160051c0190613ae9565b3861114c565b9091508190611325565b634e487b7160e01b89526041600452602489fd5b0151905038806110ce565b9250600b84018a5260208a20908a935b601f19841685106113b5576001945083601f1981161061139c575b505050811b01600b8201556110e6565b015160001960f88460031b161c1916905538808061138c565b81810151835560209485019460019093019290910190611371565b6113fd90600b86018c5260208c20601f850160051c8101916020861061133857601f0160051c0190613ae9565b386110b8565b82516001600160a01b031681830155602090920191600101611050565b600885018b52828b20611437918101908501613ae9565b38611042565b015190503880610f89565b9250600184018a5260208a20908a935b601f198416851061149c576001945083601f19811610611483575b505050811b016001820155610fa1565b015160001960f88460031b161c19169055388080611473565b81810151835560209485019460019093019290910190611458565b6114e490600186018c5260208c20601f850160051c8101916020861061133857601f0160051c0190613ae9565b38610f73565b015190503880610f30565b9250838a5260208a20908a935b601f1984168510611543576001945083601f1981161061152a575b505050811b018155610f45565b015160001960f88460031b161c1916905538808061151d565b81810151835560209485019460019093019290910190611502565b61158890858c5260208c20601f850160051c8101916020861061133857601f0160051c0190613ae9565b38610f1a565b60405162461bcd60e51b815260206004820152601d60248201527f5469636b65744d616e61676572206e6f7420696e697469616c697a65640000006044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f50726f6669742073686172652070657263656e746167652063616e6e6f74206560448201526878636565642039302560b81b6064820152608490fd5b600080fd5b5080fd5b503461071a57602036600319011261071a57600435611650613805565b61165d6004548210613d76565b808252600360205260076040832001805460ff81166116a65760ff191660011790557ff87e623aca5b8bef3f4a5f8a900ecd4c0367b153c2d476a78b65a68661ba7a258280a280f35b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920616374697665000000000000006044820152606490fd5b503461071a578060031936011261071a5760206040517f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc98152f35b503461071a5760208060031936011261162f576117416137c3565b6004546001600160a01b03939092918416919080805b8581106118d2575061176890613e3c565b948192825b86811061178657604051806117828a826136f5565b0390f35b808452600380835260408520846009820154168881146117b2575b5050506117ad90613b00565b61176d565b916117ad9397916118c993604051926117ca84613486565b6117d3836134c3565b84526117e1600184016134c3565b88850152600283015460408501528201546060840152600482015460808401528760058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892611838848301613e8c565b610100870152610120860152600a81015461014086015261185b600b82016134c3565b61016086015289600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611890600f82016134c3565b6101e086015201549082821615156102008501521c1615156102208201526118b8828c613d62565b526118c3818b613d62565b50613b00565b949038806117a1565b808352600384528487600960408620015416146118f8575b6118f390613b00565b611757565b906119056118f391613b00565b9190506118ea565b503461071a57604036600319011261071a5761194b60043561192d6137ad565b90808452600160205261194660016040862001546138bd565b613963565b5080f35b503461071a57604036600319011261071a57604061196b6137ad565b9160043581526006602052209060018060a01b03166000526020526020604060002054604051908152f35b503461071a578060031936011261071a57602090604051908152f35b503461071a576020908160031936011261071a57600435808252600390818452604083209260078401906119e960ff835416613b25565b6119f860048601544211613bda565b60098501546001600160a01b039490611a149086163314613c26565b6010860192611a2760ff85541615613c80565b6006938488015460028901541115611b6c57909660080190835b8254811015611b565787611a558285613b8e565b905490861b1c16878652868b5260408620816000528b52604060002054611a86575b50611a8190613b00565b611a41565b878652868b5260408087206000838152908d52818120548a8952898e528289208483528e5290829020889055600554915163a9059cbb60e01b81526001600160a01b03841660048201526024810182905290918d9082908d16818b816044810103925af18015611b4b578d611a819594938c937fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237293611b2e575b50604051908152a390611a77565b611b4490833d85116105b7576105a881836134a2565b5038611b20565b6040513d8a823e3d90fd5b885460ff199081168a5582541660011782558480f35b60405162461bcd60e51b8152600481018a9052603b60248201527f5468652070726f6a656374206861732072656163686564207468652066756e6460448201527f696e6720476f616c20736f6d657468696e672069732077726f6e6700000000006064820152608490fd5b503461071a57604036600319011261071a576040611bf36137ad565b9160043581526001602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461071a578060031936011261071a5760206040517fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc18152f35b503461071a57611c6d366137ef565b90611c76613bbc565b80835260206003815260408420611c9360ff600783015416613b25565b60038101544210611ebe5760048101544211611e85578315611e40578460018060a01b03918383600554166064604051809581936323b872dd60e01b83523360048401523060248401528b60448401525af1918215611e3557600892611e18575b5060068101611d04878254613b81565b905584875260068452604087203360005284526040600020611d27878254613b81565b90550180549081158015611dda575b611d6c575b5050507fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b39906040519384523393a380f35b600160401b821015611dc65781611dab9160017fb2ed2e021651f85a4754a44651fc09ac5141bc0329ce4dfe8dd712a5d04a8b39969594018155613b8e565b819291549060031b9133831b921b1916179055903880611d3b565b634e487b7160e01b87526041600452602487fd5b506000198201828111611e0457611df2849183613b8e565b905460039190911b1c16331415611d36565b634e487b7160e01b88526011600452602488fd5b611e2e90853d87116105b7576105a881836134a2565b5038611cf4565b6040513d89823e3d90fd5b60405162461bcd60e51b815260048101839052601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60405162461bcd60e51b8152600481018390526011602482015270141c9bda9958dd081a185cc8195b991959607a1b6044820152606490fd5b60405162461bcd60e51b815260048101839052601b60248201527f50726f6a65637420686173206e6f7420737461727465642079657400000000006044820152606490fd5b503461071a578060031936011261071a5760045481805b8281106120a85750611f2b90613e3c565b9180815b838110611f44576040518061178287826136f5565b808352600360209080825260408520908101548042108061209a575b611f76575b505050611f7190613b00565b611f2f565b91611f719394916120919360405192611f8e84613486565b611f97836134c3565b8452611fa5600184016134c3565b908401526002820154604084015260608301526004810154608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892612000848301613e8c565b61010087015280600983015416610120870152600a82015461014087015261202a600b83016134c3565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c086015261205e600f82016134c3565b6101e086015201549082821615156102008501521c1615156102208201526120868289613d62565b526118c38188613d62565b91903880611f65565b5060ff600783015416611f60565b8084526003806020526040852090810154421090816120eb575b506120d6575b6120d190613b00565b611f1a565b906120e36120d191613b00565b9190506120c8565b60ff91506007015416386120c2565b503461071a57602036600319011261071a5760406117829160043561211d613db7565b5061212b6004548210613d76565b815260036020522060ff60106040519261214484613486565b61214d816134c3565b845261215b600182016134c3565b602085015260028101546040850152600381015460608501526004810154608085015260058101546001600160a01b0390811660a0860152600682015460c086015260078201548416151560e08601526121b760088301613e8c565b61010086015280600983015416610120860152600a8201546101408601526121e1600b83016134c3565b610160860152600c82015416610180850152600d8101546101a0850152600e8101546101c0850152612215600f82016134c3565b6101e08501520154818116151561020084015260081c1615156102208201526040519182916020835260208301906135e6565b503461071a578060031936011261071a57612261613805565b612269613bbc565b600160ff198254161781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503461071a5760207f0d2b0de855a382608a438ffcbbe1803df7a3ed01f7f5624d816e5b378d190a586122d3366137ef565b6122de939193613861565b6122eb6004548510613d76565b8385526003825280600e604087200155604051908152a280f35b503461071a578060031936011261071a5760045481805b828110612497575061232d90613e3c565b9180805b838110612346576040518061178287826136f5565b80825260036020908082526040842060108101549060ff92838316908161237c575b50505050505061237790613b00565b612331565b9161248b959391612377979995936040519561239787613486565b6123a0846134c3565b87526123ae600185016134c3565b908701526002830154604087015282015460608601526004820154608086015260058201546001600160a01b0390811660a0870152600683015460c087015260078301548516151560e087015260089261246991600f9190612411868301613e8c565b6101008a0152806009830154166101208a0152600a8201546101408a015261243b600b83016134c3565b6101608a0152600c82015416610180890152600d8101546101a0890152600e8101546101c0890152016134c3565b6101e086015215156102008501521c1615156102208201526120868289613d62565b92903880808080612368565b808452600360205260ff6010604086200154166124bd575b6124b890613b00565b61231c565b906124ca6124b891613b00565b9190506124af565b503461071a578060031936011261071a576005546040516001600160a01b039091168152602090f35b503461071a57602036600319011261071a576125156137c3565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff16156125f0576007546001600160a01b0391908281166125a1576001600160a01b03191691169081176007556040519081527f347aa47069ceafe11306c3ddc5ac3c7428ffdc41b25817490247db1f5e636ce690602090a180f35b60405162461bcd60e51b815260206004820152602160248201527f5469636b65744d616e6167657220616c726561647920696e697469616c697a656044820152601960fa1b6064820152608490fd5b60405163e2517d3f60e01b815233600482015260006024820152604490fd5b503461071a578060031936011261071a5760ff60209154166040519015158152f35b503461071a57602036600319011261071a5760066040602092600435815260038452200154604051908152f35b503461071a57604036600319011261071a576004356001600160401b03602435818111610ce257612693903690600401613757565b82845260036020526040842060098101546001600160a01b039291908316330361279a576010015460ff161561273e57849160075416803b15610ce6576126fe94836040518097819582946343580ea760e01b84526004840152604060248401526044830190613569565b03925af1801561273357612710578280f35b811161271f5760405238808280f35b634e487b7160e01b82526041600452602482fd5b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152602e60248201527f50726f6a656374206d7573742062652066696e616c697a656420746f2073657460448201526d081d1a19481d9a59195bc815549360921b6064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e2073657460448201526d081d1a19481d9a59195bc815549360921b6064820152608490fd5b503461071a578060031936011261071a5761280f613805565b805460ff81161561284d5760ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b503461071a57602036600319011261071a5761288d6008604061178293600435815260036020522001613e8c565b6040519182916020835260208301906135a9565b503461071a578060031936011261071a576020600454604051908152f35b503461071a57604036600319011261071a576128d96137ad565b336001600160a01b038216036128f55761194b90600435613963565b60405163334bd91960e11b8152600490fd5b503461071a57604036600319011261071a5760043560243580151590818103610ce2577f63dc8b0b356967494c12d841e1359a9eaa2d8baa776fc83de2f47c386b27edc980855260016020526040852033865260205260ff604086205416156129d057507fc99334413c7a541e7e874b3e4d302828e85dd94168e081e7b4c89cbf5decb474916129c66020926129a06004548710613d76565b85875260038452601060408820019061ff00825491151560081b169061ff001916179055565b604051908152a280f35b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b503461071a57604036600319011261071a5761194b600435612a0e6137ad565b908084526001602052612a2760016040862001546138bd565b6138e3565b503461071a5760208060031936011261162f576004356001600160401b038111610ce657612a5e903690600401613757565b6004549181810184805b858110612bd85750612a7990613e3c565b948092815b868110612a9357604051806117828a826136f5565b8083526003808352600b612ab5612abc82604088200160405192838092613ccc565b03826134a2565b8481519101208851872014612adc575b5050612ad790613b00565b612a7e565b95612bd0918397612ad7948752818652604087209060405192612afe84613486565b612b07836134c3565b8452612b15600184016134c3565b8885015260028301546040850152820154606084015260048201546080840152601060018060a01b03928360058201541660a0860152600681015460c086015260ff9384600783015416151560e0870152612b9c600894612b77868501613e8c565b61010089015282600985015416610120890152600a84015461014089015283016134c3565b610160870152600c82015416610180860152600d8101546101a0860152600e8101546101c0860152611890600f82016134c3565b949038612acc565b80875260038452612ab5612bf8600b60408a200160405192838092613ccc565b8481519101208551842014612c16575b612c1190613b00565b612a68565b90612c23612c1191613b00565b919050612c08565b503461071a578060031936011261071a5760045481805b828110612d465750612c5390613e3c565b9180805b838110612c6c576040518061178287826136f5565b8082526003602090808252604084209060048201549081421180612d35575b612ca2575b50505050612c9d90613b00565b612c57565b91612d2b9391612c9d95979360405193612cbb85613486565b612cc4846134c3565b8552612cd2600185016134c3565b90850152600283015460408501528201546060840152608083015260018060a01b038060058301541660a0840152600682015460c0840152601060ff9283600782015416151560e0860152600892612000848301613e8c565b9290388080612c90565b506006830154600284015411612c8b565b808452600360205260408420600481015442119081612d89575b50612d74575b612d6f90613b00565b612c42565b90612d81612d6f91613b00565b919050612d66565b9050600260068201549101541138612d60565b503461071a578060031936011261071a5760045481805b828110612e535750612dc490613e3c565b9180815b838110612ddd576040518061178287826136f5565b808352600360209080825260408520908101548042101580612e45575b80612e37575b612e16575b505050612e1190613b00565b612dc8565b91612e11939491612e2e9360405192611f8e84613486565b91903880612e05565b5060ff600783015416612e00565b506004820154421115612dfa565b80845260038060205260408520908101544210159081612eac575b81612e9d575b50612e88575b612e8390613b00565b612db3565b90612e95612e8391613b00565b919050612e7a565b60ff9150600701541638612e74565b60048101544211159150612e6e565b503461071a57602036600319011261071a57600160406020926004358152828452200154604051908152f35b503461071a5760208060031936011261162f5760043580835260038252604083206006835260408420338552835260408420541561304d576003810154421090811561303f575b5015612ffa578083526006808352604080852033808752908552818620548487529285528186208187528552818620869055600554915163a9059cbb60e01b815260048101919091526024810183905291939081908390604490829089906001600160a01b03165af1918215612fef577fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef20237292612fd2575b506040519384523393a380f35b612fe890823d84116105b7576105a881836134a2565b5038612fc5565b6040513d87823e3d90fd5b60405162461bcd60e51b815260048101839052601760248201527f50726f6a656374206973207374696c6c206163746976650000000000000000006044820152606490fd5b600491500154421138612f2e565b60405162461bcd60e51b81526004810184905260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b503461071a578060031936011261071a5760045481805b82811061313557506130b190613e3c565b9180805b8381106130ca576040518061178287826136f5565b8082526003602090808252604084209060048201549081421180613123575b613100575b505050506130fb90613b00565b6130b5565b9161311993916130fb95979360405193612cbb85613486565b92903880806130ee565b506006830154600284015411156130e9565b808452600360205260408420600481015442119081613178575b50613163575b61315e90613b00565b6130a0565b9061317061315e91613b00565b919050613155565b90506002600682015491015411153861314f565b503461071a57602036600319011261071a5760043581526003602052604090206131b5816134c3565b906131c2600182016134c3565b81600281015491600382015492600483015490600160a01b6001900391826005860154166006860154600787015460ff16908560098901541692600a89015494600b8a0161320f906134c3565b97600c8b0154169a600d8b015499600e8c01549b600f0161322f906134c3565b9d601001549e604051806080526102208091526080510161324f91613569565b608051808203906020015261326391613569565b9760805160400152608051606001526080516080015260805160a0015260805160c00152151560805160e00152608051610100015260805161012001526080518082039061014001526132b591613569565b92608051610160015260805161018001526080516101a00152608051808203906101c001526132e391613569565b9060ff811615156080516101e0015260081c60ff161515608051610200015260805180910390f35b503461071a57602036600319011261071a57600435613328613805565b6133356004548210613d76565b808252600360205260076040832001805460ff81161561337c5760ff191690557f9f505f325627bdd7f5a6dd8bcceecdc48a989f647561427d61d35b7a50703f798280a280f35b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420697320616c726561647920706175736564000000000000006044820152606490fd5b503461071a57602036600319011261071a57602090600435815260038252600c604060018060a01b039220015416604051908152f35b90503461162f57602036600319011261162f5760043563ffffffff60e01b8116809103610ce65760209250637965db0b60e01b811490811561343b575b5015158152f35b6301ffc9a760e01b14905038613434565b90600182811c9216801561347c575b602083101461346657565b634e487b7160e01b600052602260045260246000fd5b91607f169161345b565b61024081019081106001600160401b0382111761062f57604052565b90601f801991011681019081106001600160401b0382111761062f57604052565b90604051918260008254926134d78461344c565b9081845260019485811690816000146135465750600114613503575b5050613501925003836134a2565b565b9093915060005260209081600020936000915b81831061352e575050613501935082010138806134f3565b85548884018501529485019487945091830191613516565b91505061350194506020925060ff191682840152151560051b82010138806134f3565b919082519283825260005b848110613595575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201613574565b90815180825260208080930193019160005b8281106135c9575050505090565b83516001600160a01b0316855293810193928101926001016135bb565b906136d86136126136008451610240808652850190613569565b60208501518482036020860152613569565b6040840151604084015260608401516060840152608084015160808401526136a061367460018060a01b03928360a08801511660a087015260c087015160c087015260e0870151151560e08701526101008088015190878303908801526135a9565b610120838188015116908601526101408087015190860152610160808701519086830390870152613569565b90610180908186015116908401526101a080850151908401526101c080850151908401526101e0808501519084830390850152613569565b916102008082015115159083015261022080910151151591015290565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106137295750505050505090565b9091929394958480613747600193603f198682030187528a516135e6565b9801930193019194939290613719565b81601f8201121561162a578035906001600160401b03821161062f576040519261378b601f8401601f1916602001856134a2565b8284526020838301011161162a57816000926020809301838601378301015290565b602435906001600160a01b038216820361162a57565b600435906001600160a01b038216820361162a57565b60c435906001600160a01b038216820361162a57565b604090600319011261162a576004359060243590565b3360009081527fb9cbbae02fe941283ec0eefd7b121e3bc7f89fae077b27bdd75a7fd4cf1543a860205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16156129d05750565b3360009081527fab0abe0ac784c8cb7ff2dde6fca8a20d1ab21f792e5ef34b43f146db4890393c60205260409020547fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc19060ff16156129d05750565b80600052600160205260406000203360005260205260ff60406000205416156129d05750565b906000918083526001602052604083209160018060a01b03169182845260205260ff6040842054161560001461395e5780835260016020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526001602052604083209160018060a01b03169182845260205260ff60408420541660001461395e578083526001602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b156139e157565b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152fd5b15613a2c57565b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b15613a8257565b60405162461bcd60e51b815260206004820152602260248201527f5465616d2077616c6c65742063616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608490fd5b6001600160401b03811161062f5760051b60200190565b818110613af4575050565b60008155600101613ae9565b6000198114613b0f5760010190565b634e487b7160e01b600052601160045260246000fd5b15613b2c57565b60405162461bcd60e51b815260206004820152601560248201527450726f6a656374206973206e6f742061637469766560581b6044820152606490fd5b9081602091031261162a5751801515810361162a5790565b91908201809211613b0f57565b8054821015613ba65760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60ff60005416613bc857565b60405163d93c066560e01b8152600490fd5b15613be157565b60405162461bcd60e51b815260206004820152601960248201527f50726f6a65637420686173206e6f7420656e64656420796574000000000000006044820152606490fd5b15613c2d57565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c79207468652070726f6a6563742063726561746f722063616e2066696e604482015264616c697a6560d81b6064820152608490fd5b15613c8757565b60405162461bcd60e51b815260206004820152601c60248201527f50726f6a65637420697320616c72656164792066696e616c697a6564000000006044820152606490fd5b9060009291805491613cdd8361344c565b918282526001938481169081600014613d3f5750600114613cff575b50505050565b90919394506000526020928360002092846000945b838610613d2b575050505001019038808080613cf9565b805485870183015294019385908201613d14565b9294505050602093945060ff191683830152151560051b01019038808080613cf9565b8051821015613ba65760209160051b010190565b15613d7d57565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bda9958dd08125160721b6044820152606490fd5b60405190613dc482613486565b8161022060609182815282602082015260009283604083015283818301528360808301528360a08301528360c08301528360e08301528061010083015283610120830152836101408301528061016083015283610180830152836101a0830152836101c08301526101e0820152826102008201520152565b90613e4682613ad2565b613e5360405191826134a2565b8281528092613e64601f1991613ad2565b019060005b828110613e7557505050565b602090613e80613db7565b82828501015201613e69565b9060405191828154918282526020928383019160005283600020936000905b828210613ec157505050613501925003836134a2565b85546001600160a01b031684526001958601958895509381019390910190613eab56fea2646970667358221220c6401cc0edf0e65909c698228363ff41bcf06e6708df59cd1174b17d26819c2664736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3294,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2408,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)2403_storage)"
      },
      {
        "astId": 3413,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "_status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5064,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Project)5059_storage)"
      },
      {
        "astId": 5066,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "projectCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5069,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "fundingToken",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)3060"
      },
      {
        "astId": 5075,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "projectInvestments",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 5078,
        "contract": "contracts/LaunchPad.sol:LaunchPad",
        "label": "ticketManager",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(ITicketManager)4992"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)3060": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ITicketManager)4992": {
        "encoding": "inplace",
        "label": "contract ITicketManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)2403_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)2403_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Project)5059_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct LaunchPad.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)5059_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)5059_storage": {
        "encoding": "inplace",
        "label": "struct LaunchPad.Project",
        "members": [
          {
            "astId": 5023,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5025,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 5027,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "fundingGoal",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5029,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "startTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5031,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "endTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5033,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "teamWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 5035,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "totalFunded",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5037,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "isActive",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 5040,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "contributors",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 5042,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "creator",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          },
          {
            "astId": 5044,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "profitSharePercentage",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 5046,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "category",
            "offset": 0,
            "slot": "11",
            "type": "t_string_storage"
          },
          {
            "astId": 5048,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "ticketCollection",
            "offset": 0,
            "slot": "12",
            "type": "t_address"
          },
          {
            "astId": 5050,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "projectId",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          },
          {
            "astId": 5052,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "daoProposalId",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256"
          },
          {
            "astId": 5054,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "teaserURI",
            "offset": 0,
            "slot": "15",
            "type": "t_string_storage"
          },
          {
            "astId": 5056,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "isFinalized",
            "offset": 0,
            "slot": "16",
            "type": "t_bool"
          },
          {
            "astId": 5058,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "teamKycVerified",
            "offset": 1,
            "slot": "16",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "544"
      },
      "t_struct(RoleData)2403_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 2400,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 2402,
            "contract": "contracts/LaunchPad.sol:LaunchPad",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}